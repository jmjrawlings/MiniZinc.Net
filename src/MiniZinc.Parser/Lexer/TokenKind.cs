namespace MiniZinc.Parser;

internal enum TokenKind
{
    // Nodes
    Identifier,
    Polymorphic,
    IntLiteral,
    FloatLiteral,
    StringLiteral,
    LineComment,
    BlockComment,
    QuotedIdentifier,
    QuotedOperator,

    // Keywords
    KeywordAnnotation,
    KeywordAnn,
    KeywordAny,
    KeywordArray,
    KeywordBool,
    KeywordCase,
    KeywordConstraint,
    KeywordDefault,
    KeywordDiff,
    KeywordDiv,
    KeywordElse,
    KeywordElseif,
    KeywordEndif,
    KeywordEnum,
    KeywordFalse,
    KeywordFloat,
    KeywordFunction,
    KeywordIf,
    KeywordIn,
    KeywordInclude,
    KeywordInt,
    KeywordIntersect,
    KeywordLet,
    KeywordList,
    KeywordMaximize,
    KeywordMinimize,
    KeywordMod,
    KeywordNot,
    KeywordOf,
    KeywordOp,
    KeywordOpt,
    KeywordOutput,
    KeywordPar,
    KeywordPredicate,
    KeywordRecord,
    KeywordSatisfy,
    KeywordSet,
    KeywordSolve,
    KeywordString,
    KeywordSubset,
    KeywordSuperset,
    KeywordSymdiff,
    KeywordTest,
    KeywordThen,
    KeywordTrue,
    KeywordTuple,
    KeywordType,
    KeywordUnion,
    KeywordVar,
    KeywordWhere,
    KeywordXor,

    // Binary Ops
    DoubleArrow,
    LeftArrow,
    RightArrow,
    DownWedge,
    UpWedge,
    LessThan,
    GreaterThan,
    LessThanEqual,
    GreaterThanEqual,
    Equal,
    NotEqual,
    DotDot,
    Plus,
    Minus,
    Star,
    Slash,
    PlusPlus,
    TildeEquals,
    TildePlus,
    TildeMinus,
    TildeStar,
    OpenBracket,
    CloseBracket,
    OpenParen,
    CloseParen,
    OpenBrace,
    CloseBrace,
    Dot,
    Percent,
    Underscore,
    Comma,
    Tilde,
    BackSlash,
    ForwardSlash,
    Colon,
    DoubleColon,
    Pipe,
    Empty,
    EOL,
    EOF,

    // Errors
    ERROR,
    ERROR_UNEXPECTED_CHAR,
    ERROR_QUOTED_IDENT,
    ERROR_QUOTED_OPERATOR,
    ERROR_ESCAPED_STRING,
    ERROR_UNTERMINATED_STRING_LITERAL,
    ERROR_UNTERMINATED_BLOCK_COMMENT,
    ERROR_UNTERMINATED_STRING_EXPRESSION,
    ERROR_POLYMORPHIC_IDENTIFIER
}
