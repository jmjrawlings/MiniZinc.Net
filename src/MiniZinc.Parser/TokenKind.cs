namespace MiniZinc.Parser;

public enum TokenKind : sbyte
{
    ERROR,

    // Keywords
    KEYWORD_ANNOTATION,
    KEYWORD_ANN,
    KEYWORD_ANONENUM,
    KEYWORD_ANY,
    KEYWORD_ARRAY,
    KEYWORD_BOOL,
    KEYWORD_CASE,
    KEYWORD_CONSTRAINT,
    KEYWORD_DEFAULT,
    KEYWORD_DIFF,
    KEYWORD_DIV,
    KEYWORD_ELSE,
    KEYWORD_ELSEIF,
    KEYWORD_ENDIF,
    KEYWORD_ENUM,
    KEYWORD_FALSE,
    KEYWORD_FLOAT,
    KEYWORD_FUNCTION,
    KEYWORD_IF,
    KEYWORD_IN,
    KEYWORD_INCLUDE,
    KEYWORD_INT,
    KEYWORD_INTERSECT,
    KEYWORD_LET,
    KEYWORD_LIST,
    KEYWORD_MAXIMIZE,
    KEYWORD_MINIMIZE,
    KEYWORD_MOD,
    KEYWORD_NOT,
    KEYWORD_OF,
    KEYWORD_OP,
    KEYWORD_OPT,
    KEYWORD_OUTPUT,
    KEYWORD_PAR,
    KEYWORD_PREDICATE,
    KEYWORD_RECORD,
    KEYWORD_SATISFY,
    KEYWORD_SET,
    KEYWORD_SOLVE,
    KEYWORD_STRING,
    KEYWORD_SUBSET,
    KEYWORD_SUPERSET,
    KEYWORD_SYMDIFF,
    KEYWORD_TEST,
    KEYWORD_THEN,
    KEYWORD_TRUE,
    KEYWORD_TUPLE,
    KEYWORD_TYPE,
    KEYWORD_UNION,
    KEYWORD_VAR,
    KEYWORD_WHERE,
    KEYWORD_XOR,

    // Nodes
    TOKEN_IDENTIFIER, // x
    TOKEN_IDENTIFIER_GENERIC, // $T
    TOKEN_IDENTIFIER_GENERIC_SEQUENCE, // $$T
    TOKEN_IDENTIFIER_INFIX, // `max`
    TOKEN_INT_LITERAL,
    TOKEN_FLOAT_LITERAL,
    TOKEN_STRING_LITERAL,
    TOKEN_LINE_COMMENT, // %
    TOKEN_BLOCK_COMMENT, // /*  */

    // Binary Ops
    TOKEN_BI_IMPLICATION,
    TOKEN_REVERSE_IMPLICATION,
    TOKEN_FORWARD_IMPLICATION,
    TOKEN_DISJUNCTION,
    TOKEN_CONJUNCTION,
    TOKEN_LESS_THAN,
    TOKEN_GREATER_THAN,
    TOKEN_LESS_THAN_EQUAL,
    TOKEN_GREATER_THAN_EQUAL,
    TOKEN_EQUAL,
    TOKEN_NOT_EQUAL,
    TOKEN_RANGE_INCLUSIVE, // ..
    TOKEN_RANGE_EXCLUSIVE, // <..<
    TOKEN_RANGE_RIGHT_EXCLUSIVE, // ..<
    TOKEN_RANGE_LEFT_EXCLUSIVE, // <..
    TOKEN_PLUS,
    TOKEN_MINUS,
    TOKEN_TIMES,
    TOKEN_DIVIDE,
    TOKEN_EXPONENT,
    TOKEN_PLUS_PLUS,
    TOKEN_TUPLE_ACCESS,
    TOKEN_RECORD_ACCESS,
    TOKEN_TILDE_EQUALS,
    TOKEN_TILDE_PLUS,
    TOKEN_TILDE_MINUS,
    TOKEN_TILDE_TIMES,
    TOKEN_OPEN_BRACKET,
    TOKEN_CLOSE_BRACKET,
    TOKEN_OPEN_ARRAY,
    TOKEN_CLOSE_ARRAY,
    TOKEN_OPEN_PAREN,
    TOKEN_CLOSE_PAREN,
    TOKEN_OPEN_BRACE,
    TOKEN_CLOSE_BRACE,
    TOKEN_PERCENT,
    TOKEN_UNDERSCORE,
    TOKEN_COMMA,
    TOKEN_TILDE,
    TOKEN_BACKSLASH,
    TOKEN_COLON,
    TOKEN_COLON_COLON,
    TOKEN_PIPE,
    TOKEN_EMPTY,
    TOKEN_EOL,
    TOKEN_EOF
}
