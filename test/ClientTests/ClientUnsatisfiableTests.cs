/*
THIS FILE WAS GENERATED BY THE FOLLOWING COMMAND

dotnet run --project ./build/Make/Make.csproj --make-client-tests
*/
public class ClientUnsatisfiableTests : IClassFixture<ClientFixture> {
	private readonly MiniZincClient MiniZinc;
	private readonly ITestOutputHelper _output;
	public ClientUnsatisfiableTests(ClientFixture fixture, ITestOutputHelper output){
		MiniZinc = fixture.Client;
		_output = output;
	}
	async Task Test(string path, string solver, string[]? args){
		_output.WriteLine(path);
		_output.WriteLine(new string('-',80));
		var model = Model.FromFile(path);
		_output.WriteLine(model.SourceText);
		_output.WriteLine(new string('-',80));
		foreach (var warn in model.Warnings) {
			_output.WriteLine(warn);
		}
		var options = SolveOptions.Create(solverId:solver);
		if (args is not null) {
			options = options.AddArgs(args);
		}
		var result = await MiniZinc.Solve(model, options);
		result.IsSuccess.Should().BeFalse();
		result.Status.Should().Be(SolveStatus.Unsatisfiable);
	}
	[Theory(DisplayName="unit/regression/bind-defines-var.mzn")]
	[InlineData("gecode")]
	public async Task test_solve_unit_regression_bind_defines_var(string solver) {
		var path = "unit/regression/bind-defines-var.mzn";
		Test(path, solver);
	}
	[Theory(DisplayName="unit/regression/github_661_part1.mzn")]
	[InlineData("gecode")]
	public async Task test_solve_unit_regression_github_661_part1(string solver) {
		var path = "unit/regression/github_661_part1.mzn";
		Test(path, solver);
	}
	[Theory(DisplayName="unit/regression/github_666.mzn")]
	[InlineData("gecode")]
	public async Task test_solve_unit_regression_github_666(string solver) {
		var path = "unit/regression/github_666.mzn";
		Test(path, solver);
	}
	[Theory(DisplayName="unit/regression/github_765.mzn")]
	[InlineData("gecode")]
	public async Task test_solve_unit_regression_github_765(string solver) {
		var path = "unit/regression/github_765.mzn";
		Test(path, solver);
	}
	[Theory(DisplayName="unit/regression/github_785.mzn")]
	[InlineData("gecode")]
	public async Task test_solve_unit_regression_github_785(string solver) {
		var path = "unit/regression/github_785.mzn";
		Test(path, solver);
	}
	[Theory(DisplayName="unit/types/struct_domain_5.mzn")]
	[InlineData("gecode")]
	public async Task test_solve_unit_types_struct_domain_5(string solver) {
		var path = "unit/types/struct_domain_5.mzn";
		Test(path, solver);
	}
	[Theory(DisplayName="unit/types/struct_domain_6.mzn")]
	[InlineData("gecode")]
	public async Task test_solve_unit_types_struct_domain_6(string solver) {
		var path = "unit/types/struct_domain_6.mzn";
		Test(path, solver);
	}
	[Theory(DisplayName="unit/types/struct_return_ti_4.mzn")]
	[InlineData("gecode")]
	public async Task test_solve_unit_types_struct_return_ti_4(string solver) {
		var path = "unit/types/struct_return_ti_4.mzn";
		Test(path, solver);
	}
	}