/*
<auto-generated>
This file has been auto generated by the following command:
dotnet run --project ./build/Make/Make.csproj --make-client-tests
</auto-generated>
*/
#nullable enable

public class AllSolutionsTests : ClientTest
{

	public AllSolutionsTests(ITestOutputHelper output, ClientFixture fixture) : base(output, fixture)
	{
	}

	[Fact(DisplayName="unit/compilation/multiple_neg.mzn")]
	public async Task test_solve_unit_compilation_multiple_neg()
	{
		var path = "unit/compilation/multiple_neg.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"A":0,"B":0,"C":0}""",
			"""{"A":0,"B":0,"C":1}""",
			"""{"A":1,"B":0,"C":0}""",
			"""{"A":1,"B":0,"C":1}""",
			"""{"A":1,"B":1,"C":0}""",
			"""{"A":1,"B":1,"C":1}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/array_intersect_context.mzn")]
	public async Task test_solve_unit_general_array_intersect_context()
	{
		var path = "unit/general/array_intersect_context.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":[{"_set_":"{1}"},{"_set_":"{2}"},{"_set_":"{3}"}],"b":true}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,2,3}"},{"_set_":"{1,2,3}"}],"b":false}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/cse_ctx.mzn")]
	public async Task test_solve_unit_general_cse_ctx()
	{
		var path = "unit/general/cse_ctx.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":1,"b":true,"a":true,"c":false}""",
			"""{"x":0,"b":false,"a":false,"c":true}""",
			"""{"x":0,"b":false,"a":true,"c":true}""",
			"""{"x":1,"b":true,"a":false,"c":true}""",
			};
		var args = new List<string>{
			"-G std",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/let_struct_domain.mzn")]
	public async Task test_solve_unit_general_let_struct_domain()
	{
		var path = "unit/general/let_struct_domain.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":1,"y":2}""",
			"""{"x":2,"y":2}""",
			"""{"x":1,"y":3}""",
			"""{"x":2,"y":3}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/general/md_exists.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_general_md_exists(string solver)
	{
		var path = "unit/general/md_exists.mzn";
		var solutions = new List<string> {
			"""{"b":true,"bs":[[[true,true],[false,false]],[[false,false],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[false,false]],[[false,true],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[false,false]],[[true,false],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[false,false]],[[true,true],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[false,true]],[[false,false],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[false,true]],[[false,true],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[false,true]],[[true,false],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[false,true]],[[true,true],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[true,false]],[[false,false],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[true,false]],[[false,true],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[true,false]],[[true,false],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[true,false]],[[true,true],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[true,true]],[[false,false],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[true,true]],[[false,true],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[true,true]],[[true,false],[false,false]]]}""",
			"""{"b":true,"bs":[[[true,true],[true,true]],[[true,true],[false,false]]]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/md_forall.mzn")]
	public async Task test_solve_unit_general_md_forall()
	{
		var path = "unit/general/md_forall.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":true,"bs":[[[true,true],[true,true]],[[true,true],[true,true]]]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/general/md_iffall.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_general_md_iffall(string solver)
	{
		var path = "unit/general/md_iffall.mzn";
		var solutions = new List<string> {
			"""{"b":false,"bs":[[[false,false],[false,false]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,false]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,false]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,false]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,false]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,false]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,false]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,false]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[true,true],[true,true]]]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/general/md_product_int.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_general_md_product_int(string solver)
	{
		var path = "unit/general/md_product_int.mzn";
		var solutions = new List<string> {
			"""{"a":16,"b":1}""",
			"""{"a":16,"b":2}""",
			"""{"a":16,"b":4}""",
			"""{"a":16,"b":8}""",
			"""{"a":16,"b":16}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/md_sum_float.mzn")]
	public async Task test_solve_unit_general_md_sum_float()
	{
		var path = "unit/general/md_sum_float.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"a":55.0}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/general/md_sum_int.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_general_md_sum_int(string solver)
	{
		var path = "unit/general/md_sum_int.mzn";
		var solutions = new List<string> {
			"""{"a":55,"b":10}""",
			"""{"a":55,"b":11}""",
			"""{"a":55,"b":12}""",
			"""{"a":55,"b":13}""",
			"""{"a":55,"b":14}""",
			"""{"a":55,"b":15}""",
			"""{"a":55,"b":16}""",
			"""{"a":55,"b":17}""",
			"""{"a":55,"b":18}""",
			"""{"a":55,"b":19}""",
			"""{"a":55,"b":20}""",
			"""{"a":55,"b":21}""",
			"""{"a":55,"b":22}""",
			"""{"a":55,"b":23}""",
			"""{"a":55,"b":24}""",
			"""{"a":55,"b":25}""",
			"""{"a":55,"b":26}""",
			"""{"a":55,"b":27}""",
			"""{"a":55,"b":28}""",
			"""{"a":55,"b":29}""",
			"""{"a":55,"b":30}""",
			"""{"a":55,"b":31}""",
			"""{"a":55,"b":32}""",
			"""{"a":55,"b":33}""",
			"""{"a":55,"b":34}""",
			"""{"a":55,"b":35}""",
			"""{"a":55,"b":36}""",
			"""{"a":55,"b":37}""",
			"""{"a":55,"b":38}""",
			"""{"a":55,"b":39}""",
			"""{"a":55,"b":40}""",
			"""{"a":55,"b":4}""",
			"""{"a":55,"b":5}""",
			"""{"a":55,"b":6}""",
			"""{"a":55,"b":7}""",
			"""{"a":55,"b":8}""",
			"""{"a":55,"b":9}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/general/md_xorall.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_general_md_xorall(string solver)
	{
		var path = "unit/general/md_xorall.mzn";
		var solutions = new List<string> {
			"""{"b":false,"bs":[[[false,false],[false,false]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,false]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,false]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,false]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,false]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,false]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,false]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,false]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[false,true]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,false]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,false],[true,true]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,false]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[false,true]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,false]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[false,true],[true,true]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,false]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[false,true]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,false]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,false],[true,true]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,false]],[[true,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[false,true]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[false,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[false,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[false,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[false,true],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[true,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[true,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[true,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,false]],[[true,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[false,false],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[false,false],[true,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[false,true],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[false,true],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[true,false],[false,false]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[true,false],[true,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[true,true],[false,true]]]}""",
			"""{"b":false,"bs":[[[true,true],[true,true]],[[true,true],[true,false]]]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/negated_boolean_let.mzn")]
	public async Task test_solve_unit_general_negated_boolean_let()
	{
		var path = "unit/general/negated_boolean_let.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":2}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/pow_2.mzn")]
	public async Task test_solve_unit_general_pow_2()
	{
		var path = "unit/general/pow_2.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":-2,"z":1}""",
			"""{"b":-1,"z":1}""",
			"""{"b":0,"z":1}""",
			"""{"b":1,"z":1}""",
			"""{"b":2,"z":1}""",
			};
		var args = new List<string>{
			"-D \"x = -2..2; y = 0\"",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/pow_2.mzn")]
	public async Task test_solve_unit_general_pow_2_2()
	{
		var path = "unit/general/pow_2.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":-2,"z":-2}""",
			"""{"b":-1,"z":-1}""",
			"""{"b":0,"z":0}""",
			"""{"b":1,"z":1}""",
			"""{"b":2,"z":2}""",
			};
		var args = new List<string>{
			"-D \"x = -2..2; y = 1\"",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/pow_2.mzn")]
	public async Task test_solve_unit_general_pow_2_3()
	{
		var path = "unit/general/pow_2.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":0,"z":0}""",
			"""{"b":1,"z":1}""",
			};
		var args = new List<string>{
			"-D \"x = 0..1; y = 2\"",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/pow_2.mzn")]
	public async Task test_solve_unit_general_pow_2_4()
	{
		var path = "unit/general/pow_2.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":-1,"z":-1}""",
			"""{"b":0,"z":0}""",
			"""{"b":1,"z":1}""",
			};
		var args = new List<string>{
			"-D \"x = -1..1; y = 3\"",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/pow_2.mzn")]
	public async Task test_solve_unit_general_pow_2_5()
	{
		var path = "unit/general/pow_2.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":1,"z":1}""",
			"""{"b":2,"z":0}""",
			"""{"b":3,"z":0}""",
			};
		var args = new List<string>{
			"-D \"x = 1..3; y = -1\"",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/pow_2.mzn")]
	public async Task test_solve_unit_general_pow_2_6()
	{
		var path = "unit/general/pow_2.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":2,"z":4}""",
			"""{"b":3,"z":9}""",
			};
		var args = new List<string>{
			"-D \"x = 2..3; y = 2\"",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/pow_2.mzn")]
	public async Task test_solve_unit_general_pow_2_7()
	{
		var path = "unit/general/pow_2.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":-1,"z":1}""",
			"""{"b":1,"z":1}""",
			"""{"b":2,"z":0}""",
			};
		var args = new List<string>{
			"-D \"x = -1..2; y = -2\"",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/pow_3.mzn")]
	public async Task test_solve_unit_general_pow_3()
	{
		var path = "unit/general/pow_3.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":0,"e":0,"z":1}""",
			"""{"b":0,"e":1,"z":0}""",
			"""{"b":1,"e":0,"z":1}""",
			"""{"b":1,"e":1,"z":1}""",
			};
		var args = new List<string>{
			"-D \"x = 0..1; y = 0..1\"",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/pow_3.mzn")]
	public async Task test_solve_unit_general_pow_3_2()
	{
		var path = "unit/general/pow_3.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":0,"e":1,"z":0}""",
			"""{"b":0,"e":2,"z":0}""",
			"""{"b":1,"e":1,"z":1}""",
			"""{"b":1,"e":2,"z":1}""",
			};
		var args = new List<string>{
			"-D \"x = 0..1; y = 1..2\"",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/pow_3.mzn")]
	public async Task test_solve_unit_general_pow_3_3()
	{
		var path = "unit/general/pow_3.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":-1,"e":0,"z":1}""",
			"""{"b":-1,"e":1,"z":-1}""",
			"""{"b":-1,"e":2,"z":1}""",
			"""{"b":0,"e":0,"z":1}""",
			"""{"b":0,"e":1,"z":0}""",
			"""{"b":0,"e":2,"z":0}""",
			"""{"b":1,"e":0,"z":1}""",
			"""{"b":1,"e":1,"z":1}""",
			"""{"b":1,"e":2,"z":1}""",
			"""{"b":2,"e":0,"z":1}""",
			"""{"b":2,"e":1,"z":2}""",
			"""{"b":2,"e":2,"z":4}""",
			};
		var args = new List<string>{
			"-D \"x = -1..2; y = 0..2\"",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/pow_3.mzn")]
	public async Task test_solve_unit_general_pow_3_4()
	{
		var path = "unit/general/pow_3.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":-2,"e":-2,"z":0}""",
			"""{"b":-2,"e":-1,"z":0}""",
			"""{"b":-1,"e":-2,"z":1}""",
			"""{"b":-1,"e":-1,"z":-1}""",
			"""{"b":1,"e":-2,"z":1}""",
			"""{"b":1,"e":-1,"z":1}""",
			"""{"b":2,"e":-2,"z":0}""",
			"""{"b":2,"e":-1,"z":0}""",
			};
		var args = new List<string>{
			"-D \"x = -2..2 diff {0}; y = -2..-1\"",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/pow_3.mzn")]
	public async Task test_solve_unit_general_pow_3_5()
	{
		var path = "unit/general/pow_3.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":-2,"e":-1,"z":0}""",
			"""{"b":-2,"e":0,"z":1}""",
			"""{"b":-2,"e":1,"z":-2}""",
			"""{"b":-2,"e":2,"z":4}""",
			"""{"b":-1,"e":-1,"z":-1}""",
			"""{"b":-1,"e":0,"z":1}""",
			"""{"b":-1,"e":1,"z":-1}""",
			"""{"b":-1,"e":2,"z":1}""",
			"""{"b":1,"e":-1,"z":1}""",
			"""{"b":1,"e":0,"z":1}""",
			"""{"b":1,"e":1,"z":1}""",
			"""{"b":1,"e":2,"z":1}""",
			"""{"b":2,"e":-1,"z":0}""",
			"""{"b":2,"e":0,"z":1}""",
			"""{"b":2,"e":1,"z":2}""",
			"""{"b":2,"e":2,"z":4}""",
			};
		var args = new List<string>{
			"-D \"x = -2..2 diff {0}; y = -1..2\"",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/pow_3.mzn")]
	public async Task test_solve_unit_general_pow_3_6()
	{
		var path = "unit/general/pow_3.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":-1,"e":-1,"z":-1}""",
			"""{"b":-1,"e":0,"z":1}""",
			"""{"b":-1,"e":1,"z":-1}""",
			"""{"b":0,"e":0,"z":1}""",
			"""{"b":0,"e":1,"z":0}""",
			"""{"b":1,"e":-1,"z":1}""",
			"""{"b":1,"e":0,"z":1}""",
			"""{"b":1,"e":1,"z":1}""",
			};
		var args = new List<string>{
			"-D \"x = -1..1; y = -1..1\"",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/reverse_map_path.mzn")]
	public async Task test_solve_unit_general_reverse_map_path()
	{
		var path = "unit/general/reverse_map_path.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":[null,null]}""",
			"""{"x":[1,null]}""",
			"""{"x":[null,1]}""",
			"""{"x":[1,1]}""",
			};
		var args = new List<string>{
			"--keep-paths",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/general/test_negated_and.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_general_test_negated_and(string solver)
	{
		var path = "unit/general/test_negated_and.mzn";
		var solutions = new List<string> {
			"""{"x":false,"y":false,"z":false}""",
			"""{"x":false,"y":false,"z":true}""",
			"""{"x":false,"y":true,"z":false}""",
			"""{"x":false,"y":true,"z":true}""",
			"""{"x":true,"y":false,"z":false}""",
			"""{"x":true,"y":false,"z":true}""",
			"""{"x":true,"y":true,"z":false}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/general/test_negated_and_or.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_general_test_negated_and_or(string solver)
	{
		var path = "unit/general/test_negated_and_or.mzn";
		var solutions = new List<string> {
			"""{"x":true,"y":false,"z":false}""",
			"""{"x":false,"y":true,"z":false}""",
			"""{"x":false,"y":false,"z":false}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/general/test_negated_let_good_2.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_general_test_negated_let_good_2(string solver)
	{
		var path = "unit/general/test_negated_let_good_2.mzn";
		var solutions = new List<string> {
			"""{"x":[0]}""",
			"""{"x":[2]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/general/test_negated_or.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_general_test_negated_or(string solver)
	{
		var path = "unit/general/test_negated_or.mzn";
		var solutions = new List<string> {
			"""{"x":false,"y":false,"z":false}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/test_rounding_a.mzn")]
	public async Task test_solve_unit_general_test_rounding_a()
	{
		var path = "unit/general/test_rounding_a.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"_output_item":"-2.00, -2, -2, -2 OK","x":-2.0}""",
			"""{"_output_item":"-1.75, -1, -2, -2 OK","x":-1.75}""",
			"""{"_output_item":"-1.50, -1, -2, -2 OK","x":-1.5}""",
			"""{"_output_item":"-1.25, -1, -2, -1 OK","x":-1.25}""",
			"""{"_output_item":"-1.00, -1, -1, -1 OK","x":-1.0}""",
			"""{"_output_item":"-0.25, 0, -1, 0 OK","x":-0.25}""",
			"""{"_output_item":"-0.00, 0, 0, 0 OK","x":0.0}""",
			"""{"_output_item":"0.00, 0, 0, 0 OK","x":0.0}""",
			"""{"_output_item":"0.25, 1, 0, 0 OK","x":0.25}""",
			"""{"_output_item":"0.50, 1, 0, 1 OK","x":0.5}""",
			"""{"_output_item":"0.75, 1, 0, 1 OK","x":0.75}""",
			"""{"_output_item":"1.00, 1, 1, 1 OK","x":1.0}""",
			"""{"_output_item":"1.25, 2, 1, 1 OK","x":1.25}""",
			"""{"_output_item":"1.50, 2, 1, 2 OK","x":1.5}""",
			"""{"_output_item":"1.75, 2, 1, 2 OK","x":1.75}""",
			"""{"_output_item":"2.00, 2, 2, 2 OK","x":2.0}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/test_rounding_b.mzn")]
	public async Task test_solve_unit_general_test_rounding_b()
	{
		var path = "unit/general/test_rounding_b.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"_output_item":"0.00, 0, 0, 0 OK","x":0.0}""",
			"""{"_output_item":"0.25, 1, 0, 0 OK","x":0.25}""",
			"""{"_output_item":"0.50, 1, 0, 1 OK","x":0.5}""",
			"""{"_output_item":"0.75, 1, 0, 1 OK","x":0.75}""",
			"""{"_output_item":"1.00, 1, 1, 1 OK","x":1.0}""",
			"""{"_output_item":"1.25, 2, 1, 1 OK","x":1.25}""",
			"""{"_output_item":"1.50, 2, 1, 2 OK","x":1.5}""",
			"""{"_output_item":"1.75, 2, 1, 2 OK","x":1.75}""",
			"""{"_output_item":"2.00, 2, 2, 2 OK","x":2.0}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/test_rounding_c.mzn")]
	public async Task test_solve_unit_general_test_rounding_c()
	{
		var path = "unit/general/test_rounding_c.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"_output_item":"-2.00, -2, -2, -2 OK","x":-2.0}""",
			"""{"_output_item":"-1.75, -1, -2, -2 OK","x":-1.75}""",
			"""{"_output_item":"-1.50, -1, -2, -2 OK","x":-1.5}""",
			"""{"_output_item":"-1.25, -1, -2, -1 OK","x":-1.25}""",
			"""{"_output_item":"-1.00, -1, -1, -1 OK","x":-1.0}""",
			"""{"_output_item":"-0.25, 0, -1, 0 OK","x":-0.25}""",
			"""{"_output_item":"-0.00, 0, 0, 0 OK","x":0.0}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/test_set_lt_1.mzn")]
	public async Task test_solve_unit_general_test_set_lt_1()
	{
		var path = "unit/general/test_set_lt_1.mzn";
		var solver = "chuffed";
		var solutions = new List<string> {
			"""{"sets":[{"_set_":"{1,2,3}"},{"_set_":"{1,2,4}"},{"_set_":"{1,2,5}"},{"_set_":"{1,2,6}"},{"_set_":"{1,3,4}"},{"_set_":"{1,3,5}"},{"_set_":"{1,3,6}"},{"_set_":"{1,4,5}"},{"_set_":"{1,4,6}"},{"_set_":"{1,5,6}"},{"_set_":"{2,3,4}"},{"_set_":"{2,3,5}"},{"_set_":"{2,3,6}"},{"_set_":"{2,4,5}"},{"_set_":"{2,4,6}"},{"_set_":"{2,5,6}"},{"_set_":"{3,4,5}"},{"_set_":"{3,4,6}"},{"_set_":"{3,5,6}"},{"_set_":"{4,5,6}"}]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/general/test_set_lt_2.mzn")]
	public async Task test_solve_unit_general_test_set_lt_2()
	{
		var path = "unit/general/test_set_lt_2.mzn";
		var solver = "chuffed";
		var solutions = new List<string> {
			"""{"sets":[{"_set_":"{}"},{"_set_":"{1}"},{"_set_":"{1,2}"},{"_set_":"{1,2,3}"},{"_set_":"{1,3}"},{"_set_":"{2}"},{"_set_":"{2,3}"},{"_set_":"{3}"}]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/optional/opt_math_abs.mzn")]
	public async Task test_solve_unit_optional_opt_math_abs()
	{
		var path = "unit/optional/opt_math_abs.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/optional/opt_math_neg.mzn")]
	public async Task test_solve_unit_optional_opt_math_neg()
	{
		var path = "unit/optional/opt_math_neg.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/optional/test-opt-bool-2.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_optional_test_opt_bool_2(string solver)
	{
		var path = "unit/optional/test-opt-bool-2.mzn";
		var solutions = new List<string> {
			"""{"x":true,"y":true}""",
			"""{"x":true,"y":null}""",
			"""{"x":null,"y":true}""",
			"""{"x":null,"y":null}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/optional/test-opt-bool-3.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_optional_test_opt_bool_3(string solver)
	{
		var path = "unit/optional/test-opt-bool-3.mzn";
		var solutions = new List<string> {
			"""{"x":true,"y":true}""",
			"""{"x":true,"y":null}""",
			"""{"x":null,"y":true}""",
			"""{"x":false,"y":true}""",
			"""{"x":true,"y":false}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/optional/test-opt-bool-4.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_optional_test_opt_bool_4(string solver)
	{
		var path = "unit/optional/test-opt-bool-4.mzn";
		var solutions = new List<string> {
			"""{"x":true,"y":false}""",
			"""{"x":false,"y":true}""",
			"""{"x":null,"y":null}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/optional/test-opt-bool-5.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_optional_test_opt_bool_5(string solver)
	{
		var path = "unit/optional/test-opt-bool-5.mzn";
		var solutions = new List<string> {
			"""{"x":[null,null,null]}""",
			"""{"x":[true,null,null]}""",
			"""{"x":[null,true,null]}""",
			"""{"x":[true,true,null]}""",
			"""{"x":[null,null,true]}""",
			"""{"x":[true,null,true]}""",
			"""{"x":[null,true,true]}""",
			"""{"x":[true,true,true]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/optional/test-opt-bool-6.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_optional_test_opt_bool_6(string solver)
	{
		var path = "unit/optional/test-opt-bool-6.mzn";
		var solutions = new List<string> {
			"""{"x":[true,null,null]}""",
			"""{"x":[true,false,null]}""",
			"""{"x":[true,null,false]}""",
			"""{"x":[true,false,false]}""",
			"""{"x":[null,true,null]}""",
			"""{"x":[false,true,null]}""",
			"""{"x":[null,true,false]}""",
			"""{"x":[false,true,false]}""",
			"""{"x":[true,true,null]}""",
			"""{"x":[true,true,false]}""",
			"""{"x":[null,null,true]}""",
			"""{"x":[false,null,true]}""",
			"""{"x":[null,false,true]}""",
			"""{"x":[false,false,true]}""",
			"""{"x":[true,null,true]}""",
			"""{"x":[true,false,true]}""",
			"""{"x":[null,true,true]}""",
			"""{"x":[false,true,true]}""",
			"""{"x":[true,true,true]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/optional/test-opt-if-then-else.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_optional_test_opt_if_then_else(string solver)
	{
		var path = "unit/optional/test-opt-if-then-else.mzn";
		var solutions = new List<string> {
			"""{"x":1,"y":null,"p":false,"a":1,"b":null,"c":null}""",
			"""{"x":null,"y":1,"p":false,"a":1,"b":1,"c":null}""",
			"""{"x":null,"y":1,"p":true,"a":null,"b":null,"c":null}""",
			"""{"x":1,"y":null,"p":true,"a":null,"b":1,"c":null}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/optional/test-opt-int-2.mzn")]
	public async Task test_solve_unit_optional_test_opt_int_2()
	{
		var path = "unit/optional/test-opt-int-2.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":[2,null,null]}""",
			"""{"x":[null,2,null]}""",
			"""{"x":[1,1,null]}""",
			"""{"x":[null,null,2]}""",
			"""{"x":[1,null,1]}""",
			"""{"x":[null,1,1]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/optional/test-opt-int-3.mzn")]
	public async Task test_solve_unit_optional_test_opt_int_3()
	{
		var path = "unit/optional/test-opt-int-3.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":[3,2,null]}""",
			"""{"x":[2,3,null]}""",
			"""{"x":[3,null,2]}""",
			"""{"x":[2,null,3]}""",
			"""{"x":[null,3,2]}""",
			"""{"x":[null,2,3]}""",
			"""{"x":[3,2,1]}""",
			"""{"x":[2,3,1]}""",
			"""{"x":[3,1,2]}""",
			"""{"x":[1,3,2]}""",
			"""{"x":[2,1,3]}""",
			"""{"x":[1,2,3]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/optional/test_if_then_else_opt_bool.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_optional_test_if_then_else_opt_bool(string solver)
	{
		var path = "unit/optional/test_if_then_else_opt_bool.mzn";
		var solutions = new List<string> {
			"""{"a":[true,false,true],"x":null}""",
			"""{"a":[true,true,true],"x":null}""",
			"""{"a":[false,false,true],"x":false}""",
			"""{"a":[false,true,true],"x":true}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/optional/test_if_then_else_opt_float.mzn")]
	public async Task test_solve_unit_optional_test_if_then_else_opt_float()
	{
		var path = "unit/optional/test_if_then_else_opt_float.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"a":[true,false,true],"x":null}""",
			"""{"a":[true,true,true],"x":null}""",
			"""{"a":[false,false,true],"x":2.4}""",
			"""{"a":[false,true,true],"x":1.2}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/optional/test_if_then_else_opt_int.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_optional_test_if_then_else_opt_int(string solver)
	{
		var path = "unit/optional/test_if_then_else_opt_int.mzn";
		var solutions = new List<string> {
			"""{"a":[true,false,true],"x":null}""",
			"""{"a":[true,true,true],"x":null}""",
			"""{"a":[false,false,true],"x":2}""",
			"""{"a":[false,true,true],"x":1}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/optional/test_if_then_else_var_opt_bool.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_optional_test_if_then_else_var_opt_bool(string solver)
	{
		var path = "unit/optional/test_if_then_else_var_opt_bool.mzn";
		var solutions = new List<string> {
			"""{"a":[true,false,true],"x":null}""",
			"""{"a":[true,true,true],"x":null}""",
			"""{"a":[false,false,true],"x":false}""",
			"""{"a":[false,true,true],"x":true}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/optional/test_if_then_else_var_opt_float.mzn")]
	public async Task test_solve_unit_optional_test_if_then_else_var_opt_float()
	{
		var path = "unit/optional/test_if_then_else_var_opt_float.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"a":[true,false,true],"x":null}""",
			"""{"a":[true,true,true],"x":null}""",
			"""{"a":[false,false,true],"x":2.4}""",
			"""{"a":[false,true,true],"x":1.2}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/optional/test_if_then_else_var_opt_int.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_optional_test_if_then_else_var_opt_int(string solver)
	{
		var path = "unit/optional/test_if_then_else_var_opt_int.mzn";
		var solutions = new List<string> {
			"""{"a":[true,false,true],"x":null}""",
			"""{"a":[true,true,true],"x":null}""",
			"""{"a":[false,false,true],"x":2}""",
			"""{"a":[false,true,true],"x":1}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/optional/test_optional_not_absent.mzn")]
	[InlineData("chuffed")]
	[InlineData("gecode")]
	public async Task test_solve_unit_optional_test_optional_not_absent(string solver)
	{
		var path = "unit/optional/test_optional_not_absent.mzn";
		var solutions = new List<string> {
			"""{"x":1}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/optional/test_opt_dom_empty.mzn")]
	public async Task test_solve_unit_optional_test_opt_dom_empty()
	{
		var path = "unit/optional/test_opt_dom_empty.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":null}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/optional/test_opt_dom_empty_no_absent_zero.mzn")]
	public async Task test_solve_unit_optional_test_opt_dom_empty_no_absent_zero()
	{
		var path = "unit/optional/test_opt_dom_empty_no_absent_zero.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":null}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/output/array_of_array.mzn")]
	public async Task test_solve_unit_output_array_of_array()
	{
		var path = "unit/output/array_of_array.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":[[[1]],[[2,2]]],"y":[[[1],1],[[2,2],2]],"z":[[-1,1],[0,2]]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/output/test-in-output.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_output_test_in_output(string solver)
	{
		var path = "unit/output/test-in-output.mzn";
		var solutions = new List<string> {
			"""{"_output_item":"x = 1\ny = 2\nNO\n"}""",
			"""{"_output_item":"x = 1\ny = 2\nYES\n"}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/param_file/param_file_nested_object.mzn")]
	public async Task test_solve_unit_param_file_param_file_nested_object()
	{
		var path = "unit/param_file/param_file_nested_object.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":1}""",
			};
		var args = new List<string>{
			"--data \"unit/param_file/param_file_nested_object.mpc\"",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/regression/arg-reif-array-float.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_regression_arg_reif_array_float(string solver)
	{
		var path = "unit/regression/arg-reif-array-float.mzn";
		var solutions = new List<string> {
			"""{"a":1}""",
			"""{"a":2}""",
			"""{"a":3}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/regression/arg-reif-array-int.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_regression_arg_reif_array_int(string solver)
	{
		var path = "unit/regression/arg-reif-array-int.mzn";
		var solutions = new List<string> {
			"""{"a":1}""",
			"""{"a":2}""",
			"""{"a":3}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/regression/arg-reif-float.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_regression_arg_reif_float(string solver)
	{
		var path = "unit/regression/arg-reif-float.mzn";
		var solutions = new List<string> {
			"""{"a":1}""",
			"""{"a":2}""",
			"""{"a":3}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/regression/arg-reif-int-set.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_regression_arg_reif_int_set(string solver)
	{
		var path = "unit/regression/arg-reif-int-set.mzn";
		var solutions = new List<string> {
			"""{"a":1}""",
			"""{"a":2}""",
			"""{"a":3}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/regression/arg-reif-int.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_regression_arg_reif_int(string solver)
	{
		var path = "unit/regression/arg-reif-int.mzn";
		var solutions = new List<string> {
			"""{"a":1}""",
			"""{"a":2}""",
			"""{"a":3}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/array_of_empty_sets.mzn")]
	public async Task test_solve_unit_regression_array_of_empty_sets()
	{
		var path = "unit/regression/array_of_empty_sets.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"i":1}""",
			"""{"i":2}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/regression/bug131.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_regression_bug131(string solver)
	{
		var path = "unit/regression/bug131.mzn";
		var solutions = new List<string> {
			"""{"b":false,"x":1,"y":1}""",
			"""{"b":false,"x":2,"y":2}""",
			"""{"b":false,"x":3,"y":3}""",
			"""{"b":true,"x":2,"y":1}""",
			"""{"b":true,"x":3,"y":1}""",
			"""{"b":true,"x":1,"y":2}""",
			"""{"b":true,"x":3,"y":2}""",
			"""{"b":true,"x":1,"y":3}""",
			"""{"b":true,"x":2,"y":3}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/regression/bug244.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_regression_bug244(string solver)
	{
		var path = "unit/regression/bug244.mzn";
		var solutions = new List<string> {
			"""{"b":false,"i":0}""",
			"""{"b":true,"i":1}""",
			"""{"b":false,"i":2}""",
			"""{"b":false,"i":3}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/regression/flat_set_lit.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_regression_flat_set_lit(string solver)
	{
		var path = "unit/regression/flat_set_lit.mzn";
		var solutions = new List<string> {
			"""{"x":{"_set_":"{2}"}}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/float_ceil_floor.mzn")]
	public async Task test_solve_unit_regression_float_ceil_floor()
	{
		var path = "unit/regression/float_ceil_floor.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"c":-1,"f":-1,"p":-1.0}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/float_opt_crash.mzn")]
	public async Task test_solve_unit_regression_float_opt_crash()
	{
		var path = "unit/regression/float_opt_crash.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":1.0}""",
			"""{"x":2.0}""",
			"""{"x":null}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/github537.mzn")]
	public async Task test_solve_unit_regression_github537()
	{
		var path = "unit/regression/github537.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":true}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/github_638_reduced.mzn")]
	public async Task test_solve_unit_regression_github_638_reduced()
	{
		var path = "unit/regression/github_638_reduced.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"arr":[false,true],"x":[null],"xx":1}""",
			"""{"arr":[false,true],"x":[null],"xx":2}""",
			"""{"arr":[true,true],"x":[2],"xx":2}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/github_639_part1.mzn")]
	public async Task test_solve_unit_regression_github_639_part1()
	{
		var path = "unit/regression/github_639_part1.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":1,"arr":[null,null]}""",
			"""{"x":1,"arr":[1,null]}""",
			"""{"x":2,"arr":[null,null]}""",
			"""{"x":2,"arr":[null,1]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/github_695.mzn")]
	public async Task test_solve_unit_regression_github_695()
	{
		var path = "unit/regression/github_695.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":-3,"y":-3,"idx":0,"val":-3,"p":true}""",
			"""{"x":-3,"y":-3,"idx":1,"val":-3,"p":true}""",
			"""{"x":-3,"y":-3,"idx":2,"val":-3,"p":false}""",
			"""{"x":-3,"y":-3,"idx":2,"val":-3,"p":true}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/regression/github_700_bad_sol.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_regression_github_700_bad_sol(string solver)
	{
		var path = "unit/regression/github_700_bad_sol.mzn";
		var solutions = new List<string> {
			"""{"c":{"_set_":"{1}"},"d":{"_set_":"{}"}}""",
			"""{"c":{"_set_":"{}"},"d":{"_set_":"{1}"}}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/github_716.mzn")]
	public async Task test_solve_unit_regression_github_716()
	{
		var path = "unit/regression/github_716.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"BV9":false,"BV8":true,"BV7":false,"BV4":true}""",
			"""{"BV9":true,"BV8":true,"BV7":false,"BV4":true}""",
			"""{"BV9":false,"BV8":false,"BV7":true,"BV4":true}""",
			"""{"BV9":true,"BV8":false,"BV7":true,"BV4":true}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/github_719.mzn")]
	public async Task test_solve_unit_regression_github_719()
	{
		var path = "unit/regression/github_719.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"foo":1}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/github_748.mzn")]
	public async Task test_solve_unit_regression_github_748()
	{
		var path = "unit/regression/github_748.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":[true,false,false],"y":true}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/github_748.mzn")]
	public async Task test_solve_unit_regression_github_748_2()
	{
		var path = "unit/regression/github_748.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":[true,false,false],"y":true}""",
			};
		var args = new List<string>{
			"-O0",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/github_754.mzn")]
	public async Task test_solve_unit_regression_github_754()
	{
		var path = "unit/regression/github_754.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"a":false,"b":false,"c":true,"d":true}""",
			"""{"a":false,"b":false,"c":false,"d":true}""",
			"""{"a":false,"b":false,"c":true,"d":false}""",
			"""{"a":false,"b":false,"c":false,"d":false}""",
			"""{"a":true,"b":false,"c":false,"d":false}""",
			"""{"a":false,"b":true,"c":false,"d":false}""",
			"""{"a":true,"b":true,"c":false,"d":false}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/github_766.mzn")]
	public async Task test_solve_unit_regression_github_766()
	{
		var path = "unit/regression/github_766.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"a":-2,"b":-2}""",
			"""{"a":-2,"b":2}""",
			"""{"a":2,"b":-2}""",
			"""{"a":2,"b":2}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/github_802.mzn")]
	public async Task test_solve_unit_regression_github_802()
	{
		var path = "unit/regression/github_802.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"i":1,"x":5}""",
			"""{"i":2,"x":10}""",
			};
		var args = new List<string>{
			"--keep-paths",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/github_810a.mzn")]
	public async Task test_solve_unit_regression_github_810a()
	{
		var path = "unit/regression/github_810a.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"_output_item":"Ok"}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/github_810b.mzn")]
	public async Task test_solve_unit_regression_github_810b()
	{
		var path = "unit/regression/github_810b.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"_output_item":"Ok"}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/int2float_subst.mzn")]
	public async Task test_solve_unit_regression_int2float_subst()
	{
		var path = "unit/regression/int2float_subst.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x_int":1,"y_int":2}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/regression/opt_noncontiguous_domain.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_regression_opt_noncontiguous_domain(string solver)
	{
		var path = "unit/regression/opt_noncontiguous_domain.mzn";
		var solutions = new List<string> {
			"""{"x":1}""",
			"""{"x":3}""",
			"""{"x":null}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/pow_undefined.mzn")]
	public async Task test_solve_unit_regression_pow_undefined()
	{
		var path = "unit/regression/pow_undefined.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":-1,"y":-1,"p":-1,"q":-1}""",
			"""{"x":-1,"y":0,"p":-1,"q":1}""",
			"""{"x":0,"y":-1,"p":42,"q":42}""",
			"""{"x":0,"y":0,"p":42,"q":1}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/test_annotation_on_exists.mzn")]
	public async Task test_solve_unit_regression_test_annotation_on_exists()
	{
		var path = "unit/regression/test_annotation_on_exists.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":true,"c":true,"d":false}""",
			"""{"b":true,"c":false,"d":true}""",
			"""{"b":true,"c":true,"d":true}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/regression/test_bug359.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_regression_test_bug359(string solver)
	{
		var path = "unit/regression/test_bug359.mzn";
		var solutions = new List<string> {
			"""{"p1":1,"p2":1,"p3":0,"p4":0}""",
			"""{"p1":1,"p2":1,"p3":0,"p4":1}""",
			"""{"p1":1,"p2":1,"p3":1,"p4":1}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/test_bug54.mzn")]
	public async Task test_solve_unit_regression_test_bug54()
	{
		var path = "unit/regression/test_bug54.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":7,"y":1,"z":7}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/test_bug72.mzn")]
	public async Task test_solve_unit_regression_test_bug72()
	{
		var path = "unit/regression/test_bug72.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":{"_set_":"{1}"},"b":true}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/regression/test_bug_pred_arg.mzn")]
	public async Task test_solve_unit_regression_test_bug_pred_arg()
	{
		var path = "unit/regression/test_bug_pred_arg.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":false,"x":1}""",
			"""{"b":true,"x":1}""",
			"""{"b":false,"x":2}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/regression/var_opt_unconstrained.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_regression_var_opt_unconstrained(string solver)
	{
		var path = "unit/regression/var_opt_unconstrained.mzn";
		var solutions = new List<string> {
			"""{"x":null}""",
			"""{"x":1}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/types/alias_extern_dom.mzn")]
	public async Task test_solve_unit_types_alias_extern_dom()
	{
		var path = "unit/types/alias_extern_dom.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":{"g":{"x":1}}}""",
			"""{"x":{"g":{"x":2}}}""",
			"""{"x":{"g":{"x":3}}}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/types/struct_bind_1.mzn")]
	public async Task test_solve_unit_types_struct_bind_1()
	{
		var path = "unit/types/struct_bind_1.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"a":[1,1],"x":[1,1]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/types/struct_bind_2.mzn")]
	public async Task test_solve_unit_types_struct_bind_2()
	{
		var path = "unit/types/struct_bind_2.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"a":[[1]],"x":[[1]]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/types/test_any_enum_typeinstid.mzn")]
	public async Task test_solve_unit_types_test_any_enum_typeinstid()
	{
		var path = "unit/types/test_any_enum_typeinstid.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"x":[true,false]}""",
			"""{"x":[true,true]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/types/tuple_if_then_else.mzn")]
	public async Task test_solve_unit_types_tuple_if_then_else()
	{
		var path = "unit/types/tuple_if_then_else.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"b":true,"p0":[3,4]}""",
			"""{"b":false,"p0":[3,5]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/alldifferent_except_0/test_alldiff_except0b.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_alldifferent_except_0_test_alldiff_except0b(string solver)
	{
		var path = "unit/globals/alldifferent_except_0/test_alldiff_except0b.mzn";
		var solutions = new List<string> {
			"""{"vs":[0,0,0,-1]}""",
			"""{"vs":[1,0,0,-1]}""",
			"""{"vs":[2,0,0,-1]}""",
			"""{"vs":[0,1,0,-1]}""",
			"""{"vs":[2,1,0,-1]}""",
			"""{"vs":[0,2,0,-1]}""",
			"""{"vs":[1,2,0,-1]}""",
			"""{"vs":[0,0,1,-1]}""",
			"""{"vs":[2,0,1,-1]}""",
			"""{"vs":[0,2,1,-1]}""",
			"""{"vs":[0,0,2,-1]}""",
			"""{"vs":[1,0,2,-1]}""",
			"""{"vs":[0,1,2,-1]}""",
			"""{"vs":[0,0,-1,0]}""",
			"""{"vs":[1,0,-1,0]}""",
			"""{"vs":[2,0,-1,0]}""",
			"""{"vs":[0,1,-1,0]}""",
			"""{"vs":[2,1,-1,0]}""",
			"""{"vs":[0,2,-1,0]}""",
			"""{"vs":[1,2,-1,0]}""",
			"""{"vs":[0,-1,0,0]}""",
			"""{"vs":[1,-1,0,0]}""",
			"""{"vs":[2,-1,0,0]}""",
			"""{"vs":[-1,0,0,0]}""",
			"""{"vs":[0,0,0,0]}""",
			"""{"vs":[1,0,0,0]}""",
			"""{"vs":[2,0,0,0]}""",
			"""{"vs":[-1,1,0,0]}""",
			"""{"vs":[0,1,0,0]}""",
			"""{"vs":[2,1,0,0]}""",
			"""{"vs":[-1,2,0,0]}""",
			"""{"vs":[0,2,0,0]}""",
			"""{"vs":[1,2,0,0]}""",
			"""{"vs":[0,-1,1,0]}""",
			"""{"vs":[2,-1,1,0]}""",
			"""{"vs":[-1,0,1,0]}""",
			"""{"vs":[0,0,1,0]}""",
			"""{"vs":[2,0,1,0]}""",
			"""{"vs":[-1,2,1,0]}""",
			"""{"vs":[0,2,1,0]}""",
			"""{"vs":[0,-1,2,0]}""",
			"""{"vs":[1,-1,2,0]}""",
			"""{"vs":[-1,0,2,0]}""",
			"""{"vs":[0,0,2,0]}""",
			"""{"vs":[1,0,2,0]}""",
			"""{"vs":[-1,1,2,0]}""",
			"""{"vs":[0,1,2,0]}""",
			"""{"vs":[0,0,-1,1]}""",
			"""{"vs":[2,0,-1,1]}""",
			"""{"vs":[0,2,-1,1]}""",
			"""{"vs":[0,-1,0,1]}""",
			"""{"vs":[2,-1,0,1]}""",
			"""{"vs":[-1,0,0,1]}""",
			"""{"vs":[0,0,0,1]}""",
			"""{"vs":[2,0,0,1]}""",
			"""{"vs":[-1,2,0,1]}""",
			"""{"vs":[0,2,0,1]}""",
			"""{"vs":[0,-1,2,1]}""",
			"""{"vs":[-1,0,2,1]}""",
			"""{"vs":[0,0,2,1]}""",
			"""{"vs":[0,0,-1,2]}""",
			"""{"vs":[1,0,-1,2]}""",
			"""{"vs":[0,1,-1,2]}""",
			"""{"vs":[0,-1,0,2]}""",
			"""{"vs":[1,-1,0,2]}""",
			"""{"vs":[-1,0,0,2]}""",
			"""{"vs":[0,0,0,2]}""",
			"""{"vs":[1,0,0,2]}""",
			"""{"vs":[-1,1,0,2]}""",
			"""{"vs":[0,1,0,2]}""",
			"""{"vs":[0,-1,1,2]}""",
			"""{"vs":[-1,0,1,2]}""",
			"""{"vs":[0,0,1,2]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/arg_max/globals_arg_max.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_arg_max_globals_arg_max(string solver)
	{
		var path = "unit/globals/arg_max/globals_arg_max.mzn";
		var solutions = new List<string> {
			"""{"x":[1,2],"y":5}""",
			"""{"x":[2,1],"y":4}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/arg_max/globals_arg_max_opt.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_arg_max_globals_arg_max_opt(string solver)
	{
		var path = "unit/globals/arg_max/globals_arg_max_opt.mzn";
		var solutions = new List<string> {
			"""{"x":[3,null,2,null,1],"y":1}""",
			"""{"x":[3,null,1,null,2],"y":1}""",
			"""{"x":[2,null,3,null,1],"y":3}""",
			"""{"x":[1,null,3,null,2],"y":3}""",
			"""{"x":[1,null,2,null,3],"y":5}""",
			"""{"x":[2,null,1,null,3],"y":5}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/arg_max/globals_arg_max_opt_weak.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_arg_max_globals_arg_max_opt_weak(string solver)
	{
		var path = "unit/globals/arg_max/globals_arg_max_opt_weak.mzn";
		var solutions = new List<string> {
			"""{"x":[null,null],"y":null}""",
			"""{"x":[1,null],"y":1}""",
			"""{"x":[2,null],"y":1}""",
			"""{"x":[null,1],"y":2}""",
			"""{"x":[null,2],"y":2}""",
			"""{"x":[1,2],"y":2}""",
			"""{"x":[2,1],"y":1}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/arg_min/globals_arg_max_opt.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_arg_min_globals_arg_max_opt(string solver)
	{
		var path = "unit/globals/arg_min/globals_arg_max_opt.mzn";
		var solutions = new List<string> {
			"""{"x":[1,null,2,null,3],"y":1}""",
			"""{"x":[1,null,3,null,2],"y":1}""",
			"""{"x":[2,null,1,null,3],"y":3}""",
			"""{"x":[3,null,1,null,2],"y":3}""",
			"""{"x":[2,null,3,null,1],"y":5}""",
			"""{"x":[3,null,2,null,1],"y":5}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/arg_min/globals_arg_min.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_arg_min_globals_arg_min(string solver)
	{
		var path = "unit/globals/arg_min/globals_arg_min.mzn";
		var solutions = new List<string> {
			"""{"x":[1,2],"y":4}""",
			"""{"x":[2,1],"y":5}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/arg_min/globals_arg_min_opt_weak.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_arg_min_globals_arg_min_opt_weak(string solver)
	{
		var path = "unit/globals/arg_min/globals_arg_min_opt_weak.mzn";
		var solutions = new List<string> {
			"""{"x":[null,null],"y":null}""",
			"""{"x":[1,null],"y":1}""",
			"""{"x":[2,null],"y":1}""",
			"""{"x":[null,1],"y":2}""",
			"""{"x":[null,2],"y":2}""",
			"""{"x":[1,2],"y":1}""",
			"""{"x":[2,1],"y":2}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/arg_val/arg_val_enum.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_arg_val_arg_val_enum(string solver)
	{
		var path = "unit/globals/arg_val/arg_val_enum.mzn";
		var solutions = new List<string> {
			"""{"vals":["C","D"],"i":"A"}""",
			"""{"vals":["D","C"],"i":"B"}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/bin_packing/globals_bin_packing.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_bin_packing_globals_bin_packing(string solver)
	{
		var path = "unit/globals/bin_packing/globals_bin_packing.mzn";
		var solutions = new List<string> {
			"""{"bins":[4,4,3,3,2,1]}""",
			"""{"bins":[5,4,3,3,2,1]}""",
			"""{"bins":[4,5,3,3,2,1]}""",
			"""{"bins":[5,5,3,3,2,1]}""",
			"""{"bins":[4,3,4,3,2,1]}""",
			"""{"bins":[5,3,4,3,2,1]}""",
			"""{"bins":[3,4,4,3,2,1]}""",
			"""{"bins":[4,4,4,3,2,1]}""",
			"""{"bins":[5,4,4,3,2,1]}""",
			"""{"bins":[3,5,4,3,2,1]}""",
			"""{"bins":[4,5,4,3,2,1]}""",
			"""{"bins":[5,5,4,3,2,1]}""",
			"""{"bins":[4,3,5,3,2,1]}""",
			"""{"bins":[5,3,5,3,2,1]}""",
			"""{"bins":[3,4,5,3,2,1]}""",
			"""{"bins":[4,4,5,3,2,1]}""",
			"""{"bins":[5,4,5,3,2,1]}""",
			"""{"bins":[3,5,5,3,2,1]}""",
			"""{"bins":[4,5,5,3,2,1]}""",
			"""{"bins":[5,5,5,3,2,1]}""",
			"""{"bins":[3,3,3,4,2,1]}""",
			"""{"bins":[4,3,3,4,2,1]}""",
			"""{"bins":[5,3,3,4,2,1]}""",
			"""{"bins":[3,4,3,4,2,1]}""",
			"""{"bins":[5,4,3,4,2,1]}""",
			"""{"bins":[3,5,3,4,2,1]}""",
			"""{"bins":[4,5,3,4,2,1]}""",
			"""{"bins":[5,5,3,4,2,1]}""",
			"""{"bins":[3,3,4,4,2,1]}""",
			"""{"bins":[5,3,4,4,2,1]}""",
			"""{"bins":[3,5,4,4,2,1]}""",
			"""{"bins":[5,5,4,4,2,1]}""",
			"""{"bins":[3,3,5,4,2,1]}""",
			"""{"bins":[4,3,5,4,2,1]}""",
			"""{"bins":[5,3,5,4,2,1]}""",
			"""{"bins":[3,4,5,4,2,1]}""",
			"""{"bins":[5,4,5,4,2,1]}""",
			"""{"bins":[3,5,5,4,2,1]}""",
			"""{"bins":[4,5,5,4,2,1]}""",
			"""{"bins":[5,5,5,4,2,1]}""",
			"""{"bins":[3,3,3,5,2,1]}""",
			"""{"bins":[4,3,3,5,2,1]}""",
			"""{"bins":[5,3,3,5,2,1]}""",
			"""{"bins":[3,4,3,5,2,1]}""",
			"""{"bins":[4,4,3,5,2,1]}""",
			"""{"bins":[5,4,3,5,2,1]}""",
			"""{"bins":[3,5,3,5,2,1]}""",
			"""{"bins":[4,5,3,5,2,1]}""",
			"""{"bins":[3,3,4,5,2,1]}""",
			"""{"bins":[4,3,4,5,2,1]}""",
			"""{"bins":[5,3,4,5,2,1]}""",
			"""{"bins":[3,4,4,5,2,1]}""",
			"""{"bins":[4,4,4,5,2,1]}""",
			"""{"bins":[5,4,4,5,2,1]}""",
			"""{"bins":[3,5,4,5,2,1]}""",
			"""{"bins":[4,5,4,5,2,1]}""",
			"""{"bins":[3,3,5,5,2,1]}""",
			"""{"bins":[4,3,5,5,2,1]}""",
			"""{"bins":[3,4,5,5,2,1]}""",
			"""{"bins":[4,4,5,5,2,1]}""",
			"""{"bins":[4,4,2,2,3,1]}""",
			"""{"bins":[5,4,2,2,3,1]}""",
			"""{"bins":[4,5,2,2,3,1]}""",
			"""{"bins":[5,5,2,2,3,1]}""",
			"""{"bins":[4,2,4,2,3,1]}""",
			"""{"bins":[5,2,4,2,3,1]}""",
			"""{"bins":[2,4,4,2,3,1]}""",
			"""{"bins":[4,4,4,2,3,1]}""",
			"""{"bins":[5,4,4,2,3,1]}""",
			"""{"bins":[2,5,4,2,3,1]}""",
			"""{"bins":[4,5,4,2,3,1]}""",
			"""{"bins":[5,5,4,2,3,1]}""",
			"""{"bins":[4,2,5,2,3,1]}""",
			"""{"bins":[5,2,5,2,3,1]}""",
			"""{"bins":[2,4,5,2,3,1]}""",
			"""{"bins":[4,4,5,2,3,1]}""",
			"""{"bins":[5,4,5,2,3,1]}""",
			"""{"bins":[2,5,5,2,3,1]}""",
			"""{"bins":[4,5,5,2,3,1]}""",
			"""{"bins":[5,5,5,2,3,1]}""",
			"""{"bins":[2,2,2,4,3,1]}""",
			"""{"bins":[4,2,2,4,3,1]}""",
			"""{"bins":[5,2,2,4,3,1]}""",
			"""{"bins":[2,4,2,4,3,1]}""",
			"""{"bins":[5,4,2,4,3,1]}""",
			"""{"bins":[2,5,2,4,3,1]}""",
			"""{"bins":[4,5,2,4,3,1]}""",
			"""{"bins":[5,5,2,4,3,1]}""",
			"""{"bins":[2,2,4,4,3,1]}""",
			"""{"bins":[5,2,4,4,3,1]}""",
			"""{"bins":[2,5,4,4,3,1]}""",
			"""{"bins":[5,5,4,4,3,1]}""",
			"""{"bins":[2,2,5,4,3,1]}""",
			"""{"bins":[4,2,5,4,3,1]}""",
			"""{"bins":[5,2,5,4,3,1]}""",
			"""{"bins":[2,4,5,4,3,1]}""",
			"""{"bins":[5,4,5,4,3,1]}""",
			"""{"bins":[2,5,5,4,3,1]}""",
			"""{"bins":[4,5,5,4,3,1]}""",
			"""{"bins":[5,5,5,4,3,1]}""",
			"""{"bins":[2,2,2,5,3,1]}""",
			"""{"bins":[4,2,2,5,3,1]}""",
			"""{"bins":[5,2,2,5,3,1]}""",
			"""{"bins":[2,4,2,5,3,1]}""",
			"""{"bins":[4,4,2,5,3,1]}""",
			"""{"bins":[5,4,2,5,3,1]}""",
			"""{"bins":[2,5,2,5,3,1]}""",
			"""{"bins":[4,5,2,5,3,1]}""",
			"""{"bins":[2,2,4,5,3,1]}""",
			"""{"bins":[4,2,4,5,3,1]}""",
			"""{"bins":[5,2,4,5,3,1]}""",
			"""{"bins":[2,4,4,5,3,1]}""",
			"""{"bins":[4,4,4,5,3,1]}""",
			"""{"bins":[5,4,4,5,3,1]}""",
			"""{"bins":[2,5,4,5,3,1]}""",
			"""{"bins":[4,5,4,5,3,1]}""",
			"""{"bins":[2,2,5,5,3,1]}""",
			"""{"bins":[4,2,5,5,3,1]}""",
			"""{"bins":[2,4,5,5,3,1]}""",
			"""{"bins":[4,4,5,5,3,1]}""",
			"""{"bins":[3,3,2,2,4,1]}""",
			"""{"bins":[5,3,2,2,4,1]}""",
			"""{"bins":[3,5,2,2,4,1]}""",
			"""{"bins":[5,5,2,2,4,1]}""",
			"""{"bins":[3,2,3,2,4,1]}""",
			"""{"bins":[5,2,3,2,4,1]}""",
			"""{"bins":[2,3,3,2,4,1]}""",
			"""{"bins":[3,3,3,2,4,1]}""",
			"""{"bins":[5,3,3,2,4,1]}""",
			"""{"bins":[2,5,3,2,4,1]}""",
			"""{"bins":[3,5,3,2,4,1]}""",
			"""{"bins":[5,5,3,2,4,1]}""",
			"""{"bins":[3,2,5,2,4,1]}""",
			"""{"bins":[5,2,5,2,4,1]}""",
			"""{"bins":[2,3,5,2,4,1]}""",
			"""{"bins":[3,3,5,2,4,1]}""",
			"""{"bins":[5,3,5,2,4,1]}""",
			"""{"bins":[2,5,5,2,4,1]}""",
			"""{"bins":[3,5,5,2,4,1]}""",
			"""{"bins":[5,5,5,2,4,1]}""",
			"""{"bins":[2,2,2,3,4,1]}""",
			"""{"bins":[3,2,2,3,4,1]}""",
			"""{"bins":[5,2,2,3,4,1]}""",
			"""{"bins":[2,3,2,3,4,1]}""",
			"""{"bins":[5,3,2,3,4,1]}""",
			"""{"bins":[2,5,2,3,4,1]}""",
			"""{"bins":[3,5,2,3,4,1]}""",
			"""{"bins":[5,5,2,3,4,1]}""",
			"""{"bins":[2,2,3,3,4,1]}""",
			"""{"bins":[5,2,3,3,4,1]}""",
			"""{"bins":[2,5,3,3,4,1]}""",
			"""{"bins":[5,5,3,3,4,1]}""",
			"""{"bins":[2,2,5,3,4,1]}""",
			"""{"bins":[3,2,5,3,4,1]}""",
			"""{"bins":[5,2,5,3,4,1]}""",
			"""{"bins":[2,3,5,3,4,1]}""",
			"""{"bins":[5,3,5,3,4,1]}""",
			"""{"bins":[2,5,5,3,4,1]}""",
			"""{"bins":[3,5,5,3,4,1]}""",
			"""{"bins":[5,5,5,3,4,1]}""",
			"""{"bins":[2,2,2,5,4,1]}""",
			"""{"bins":[3,2,2,5,4,1]}""",
			"""{"bins":[5,2,2,5,4,1]}""",
			"""{"bins":[2,3,2,5,4,1]}""",
			"""{"bins":[3,3,2,5,4,1]}""",
			"""{"bins":[5,3,2,5,4,1]}""",
			"""{"bins":[2,5,2,5,4,1]}""",
			"""{"bins":[3,5,2,5,4,1]}""",
			"""{"bins":[2,2,3,5,4,1]}""",
			"""{"bins":[3,2,3,5,4,1]}""",
			"""{"bins":[5,2,3,5,4,1]}""",
			"""{"bins":[2,3,3,5,4,1]}""",
			"""{"bins":[3,3,3,5,4,1]}""",
			"""{"bins":[5,3,3,5,4,1]}""",
			"""{"bins":[2,5,3,5,4,1]}""",
			"""{"bins":[3,5,3,5,4,1]}""",
			"""{"bins":[2,2,5,5,4,1]}""",
			"""{"bins":[3,2,5,5,4,1]}""",
			"""{"bins":[2,3,5,5,4,1]}""",
			"""{"bins":[3,3,5,5,4,1]}""",
			"""{"bins":[3,3,2,2,5,1]}""",
			"""{"bins":[4,3,2,2,5,1]}""",
			"""{"bins":[3,4,2,2,5,1]}""",
			"""{"bins":[4,4,2,2,5,1]}""",
			"""{"bins":[3,2,3,2,5,1]}""",
			"""{"bins":[4,2,3,2,5,1]}""",
			"""{"bins":[2,3,3,2,5,1]}""",
			"""{"bins":[3,3,3,2,5,1]}""",
			"""{"bins":[4,3,3,2,5,1]}""",
			"""{"bins":[2,4,3,2,5,1]}""",
			"""{"bins":[3,4,3,2,5,1]}""",
			"""{"bins":[4,4,3,2,5,1]}""",
			"""{"bins":[3,2,4,2,5,1]}""",
			"""{"bins":[4,2,4,2,5,1]}""",
			"""{"bins":[2,3,4,2,5,1]}""",
			"""{"bins":[3,3,4,2,5,1]}""",
			"""{"bins":[4,3,4,2,5,1]}""",
			"""{"bins":[2,4,4,2,5,1]}""",
			"""{"bins":[3,4,4,2,5,1]}""",
			"""{"bins":[4,4,4,2,5,1]}""",
			"""{"bins":[2,2,2,3,5,1]}""",
			"""{"bins":[3,2,2,3,5,1]}""",
			"""{"bins":[4,2,2,3,5,1]}""",
			"""{"bins":[2,3,2,3,5,1]}""",
			"""{"bins":[4,3,2,3,5,1]}""",
			"""{"bins":[2,4,2,3,5,1]}""",
			"""{"bins":[3,4,2,3,5,1]}""",
			"""{"bins":[4,4,2,3,5,1]}""",
			"""{"bins":[2,2,3,3,5,1]}""",
			"""{"bins":[4,2,3,3,5,1]}""",
			"""{"bins":[2,4,3,3,5,1]}""",
			"""{"bins":[4,4,3,3,5,1]}""",
			"""{"bins":[2,2,4,3,5,1]}""",
			"""{"bins":[3,2,4,3,5,1]}""",
			"""{"bins":[4,2,4,3,5,1]}""",
			"""{"bins":[2,3,4,3,5,1]}""",
			"""{"bins":[4,3,4,3,5,1]}""",
			"""{"bins":[2,4,4,3,5,1]}""",
			"""{"bins":[3,4,4,3,5,1]}""",
			"""{"bins":[4,4,4,3,5,1]}""",
			"""{"bins":[2,2,2,4,5,1]}""",
			"""{"bins":[3,2,2,4,5,1]}""",
			"""{"bins":[4,2,2,4,5,1]}""",
			"""{"bins":[2,3,2,4,5,1]}""",
			"""{"bins":[3,3,2,4,5,1]}""",
			"""{"bins":[4,3,2,4,5,1]}""",
			"""{"bins":[2,4,2,4,5,1]}""",
			"""{"bins":[3,4,2,4,5,1]}""",
			"""{"bins":[2,2,3,4,5,1]}""",
			"""{"bins":[3,2,3,4,5,1]}""",
			"""{"bins":[4,2,3,4,5,1]}""",
			"""{"bins":[2,3,3,4,5,1]}""",
			"""{"bins":[3,3,3,4,5,1]}""",
			"""{"bins":[4,3,3,4,5,1]}""",
			"""{"bins":[2,4,3,4,5,1]}""",
			"""{"bins":[3,4,3,4,5,1]}""",
			"""{"bins":[2,2,4,4,5,1]}""",
			"""{"bins":[3,2,4,4,5,1]}""",
			"""{"bins":[2,3,4,4,5,1]}""",
			"""{"bins":[3,3,4,4,5,1]}""",
			"""{"bins":[4,4,3,3,1,2]}""",
			"""{"bins":[5,4,3,3,1,2]}""",
			"""{"bins":[4,5,3,3,1,2]}""",
			"""{"bins":[5,5,3,3,1,2]}""",
			"""{"bins":[4,3,4,3,1,2]}""",
			"""{"bins":[5,3,4,3,1,2]}""",
			"""{"bins":[3,4,4,3,1,2]}""",
			"""{"bins":[4,4,4,3,1,2]}""",
			"""{"bins":[5,4,4,3,1,2]}""",
			"""{"bins":[3,5,4,3,1,2]}""",
			"""{"bins":[4,5,4,3,1,2]}""",
			"""{"bins":[5,5,4,3,1,2]}""",
			"""{"bins":[4,3,5,3,1,2]}""",
			"""{"bins":[5,3,5,3,1,2]}""",
			"""{"bins":[3,4,5,3,1,2]}""",
			"""{"bins":[4,4,5,3,1,2]}""",
			"""{"bins":[5,4,5,3,1,2]}""",
			"""{"bins":[3,5,5,3,1,2]}""",
			"""{"bins":[4,5,5,3,1,2]}""",
			"""{"bins":[5,5,5,3,1,2]}""",
			"""{"bins":[3,3,3,4,1,2]}""",
			"""{"bins":[4,3,3,4,1,2]}""",
			"""{"bins":[5,3,3,4,1,2]}""",
			"""{"bins":[3,4,3,4,1,2]}""",
			"""{"bins":[5,4,3,4,1,2]}""",
			"""{"bins":[3,5,3,4,1,2]}""",
			"""{"bins":[4,5,3,4,1,2]}""",
			"""{"bins":[5,5,3,4,1,2]}""",
			"""{"bins":[3,3,4,4,1,2]}""",
			"""{"bins":[5,3,4,4,1,2]}""",
			"""{"bins":[3,5,4,4,1,2]}""",
			"""{"bins":[5,5,4,4,1,2]}""",
			"""{"bins":[3,3,5,4,1,2]}""",
			"""{"bins":[4,3,5,4,1,2]}""",
			"""{"bins":[5,3,5,4,1,2]}""",
			"""{"bins":[3,4,5,4,1,2]}""",
			"""{"bins":[5,4,5,4,1,2]}""",
			"""{"bins":[3,5,5,4,1,2]}""",
			"""{"bins":[4,5,5,4,1,2]}""",
			"""{"bins":[5,5,5,4,1,2]}""",
			"""{"bins":[3,3,3,5,1,2]}""",
			"""{"bins":[4,3,3,5,1,2]}""",
			"""{"bins":[5,3,3,5,1,2]}""",
			"""{"bins":[3,4,3,5,1,2]}""",
			"""{"bins":[4,4,3,5,1,2]}""",
			"""{"bins":[5,4,3,5,1,2]}""",
			"""{"bins":[3,5,3,5,1,2]}""",
			"""{"bins":[4,5,3,5,1,2]}""",
			"""{"bins":[3,3,4,5,1,2]}""",
			"""{"bins":[4,3,4,5,1,2]}""",
			"""{"bins":[5,3,4,5,1,2]}""",
			"""{"bins":[3,4,4,5,1,2]}""",
			"""{"bins":[4,4,4,5,1,2]}""",
			"""{"bins":[5,4,4,5,1,2]}""",
			"""{"bins":[3,5,4,5,1,2]}""",
			"""{"bins":[4,5,4,5,1,2]}""",
			"""{"bins":[3,3,5,5,1,2]}""",
			"""{"bins":[4,3,5,5,1,2]}""",
			"""{"bins":[3,4,5,5,1,2]}""",
			"""{"bins":[4,4,5,5,1,2]}""",
			"""{"bins":[4,4,1,1,3,2]}""",
			"""{"bins":[5,4,1,1,3,2]}""",
			"""{"bins":[4,5,1,1,3,2]}""",
			"""{"bins":[5,5,1,1,3,2]}""",
			"""{"bins":[4,1,4,1,3,2]}""",
			"""{"bins":[5,1,4,1,3,2]}""",
			"""{"bins":[1,4,4,1,3,2]}""",
			"""{"bins":[4,4,4,1,3,2]}""",
			"""{"bins":[5,4,4,1,3,2]}""",
			"""{"bins":[1,5,4,1,3,2]}""",
			"""{"bins":[4,5,4,1,3,2]}""",
			"""{"bins":[5,5,4,1,3,2]}""",
			"""{"bins":[4,1,5,1,3,2]}""",
			"""{"bins":[5,1,5,1,3,2]}""",
			"""{"bins":[1,4,5,1,3,2]}""",
			"""{"bins":[4,4,5,1,3,2]}""",
			"""{"bins":[5,4,5,1,3,2]}""",
			"""{"bins":[1,5,5,1,3,2]}""",
			"""{"bins":[4,5,5,1,3,2]}""",
			"""{"bins":[5,5,5,1,3,2]}""",
			"""{"bins":[1,1,1,4,3,2]}""",
			"""{"bins":[4,1,1,4,3,2]}""",
			"""{"bins":[5,1,1,4,3,2]}""",
			"""{"bins":[1,4,1,4,3,2]}""",
			"""{"bins":[5,4,1,4,3,2]}""",
			"""{"bins":[1,5,1,4,3,2]}""",
			"""{"bins":[4,5,1,4,3,2]}""",
			"""{"bins":[5,5,1,4,3,2]}""",
			"""{"bins":[1,1,4,4,3,2]}""",
			"""{"bins":[5,1,4,4,3,2]}""",
			"""{"bins":[1,5,4,4,3,2]}""",
			"""{"bins":[5,5,4,4,3,2]}""",
			"""{"bins":[1,1,5,4,3,2]}""",
			"""{"bins":[4,1,5,4,3,2]}""",
			"""{"bins":[5,1,5,4,3,2]}""",
			"""{"bins":[1,4,5,4,3,2]}""",
			"""{"bins":[5,4,5,4,3,2]}""",
			"""{"bins":[1,5,5,4,3,2]}""",
			"""{"bins":[4,5,5,4,3,2]}""",
			"""{"bins":[5,5,5,4,3,2]}""",
			"""{"bins":[1,1,1,5,3,2]}""",
			"""{"bins":[4,1,1,5,3,2]}""",
			"""{"bins":[5,1,1,5,3,2]}""",
			"""{"bins":[1,4,1,5,3,2]}""",
			"""{"bins":[4,4,1,5,3,2]}""",
			"""{"bins":[5,4,1,5,3,2]}""",
			"""{"bins":[1,5,1,5,3,2]}""",
			"""{"bins":[4,5,1,5,3,2]}""",
			"""{"bins":[1,1,4,5,3,2]}""",
			"""{"bins":[4,1,4,5,3,2]}""",
			"""{"bins":[5,1,4,5,3,2]}""",
			"""{"bins":[1,4,4,5,3,2]}""",
			"""{"bins":[4,4,4,5,3,2]}""",
			"""{"bins":[5,4,4,5,3,2]}""",
			"""{"bins":[1,5,4,5,3,2]}""",
			"""{"bins":[4,5,4,5,3,2]}""",
			"""{"bins":[1,1,5,5,3,2]}""",
			"""{"bins":[4,1,5,5,3,2]}""",
			"""{"bins":[1,4,5,5,3,2]}""",
			"""{"bins":[4,4,5,5,3,2]}""",
			"""{"bins":[3,3,1,1,4,2]}""",
			"""{"bins":[5,3,1,1,4,2]}""",
			"""{"bins":[3,5,1,1,4,2]}""",
			"""{"bins":[5,5,1,1,4,2]}""",
			"""{"bins":[3,1,3,1,4,2]}""",
			"""{"bins":[5,1,3,1,4,2]}""",
			"""{"bins":[1,3,3,1,4,2]}""",
			"""{"bins":[3,3,3,1,4,2]}""",
			"""{"bins":[5,3,3,1,4,2]}""",
			"""{"bins":[1,5,3,1,4,2]}""",
			"""{"bins":[3,5,3,1,4,2]}""",
			"""{"bins":[5,5,3,1,4,2]}""",
			"""{"bins":[3,1,5,1,4,2]}""",
			"""{"bins":[5,1,5,1,4,2]}""",
			"""{"bins":[1,3,5,1,4,2]}""",
			"""{"bins":[3,3,5,1,4,2]}""",
			"""{"bins":[5,3,5,1,4,2]}""",
			"""{"bins":[1,5,5,1,4,2]}""",
			"""{"bins":[3,5,5,1,4,2]}""",
			"""{"bins":[5,5,5,1,4,2]}""",
			"""{"bins":[1,1,1,3,4,2]}""",
			"""{"bins":[3,1,1,3,4,2]}""",
			"""{"bins":[5,1,1,3,4,2]}""",
			"""{"bins":[1,3,1,3,4,2]}""",
			"""{"bins":[5,3,1,3,4,2]}""",
			"""{"bins":[1,5,1,3,4,2]}""",
			"""{"bins":[3,5,1,3,4,2]}""",
			"""{"bins":[5,5,1,3,4,2]}""",
			"""{"bins":[1,1,3,3,4,2]}""",
			"""{"bins":[5,1,3,3,4,2]}""",
			"""{"bins":[1,5,3,3,4,2]}""",
			"""{"bins":[5,5,3,3,4,2]}""",
			"""{"bins":[1,1,5,3,4,2]}""",
			"""{"bins":[3,1,5,3,4,2]}""",
			"""{"bins":[5,1,5,3,4,2]}""",
			"""{"bins":[1,3,5,3,4,2]}""",
			"""{"bins":[5,3,5,3,4,2]}""",
			"""{"bins":[1,5,5,3,4,2]}""",
			"""{"bins":[3,5,5,3,4,2]}""",
			"""{"bins":[5,5,5,3,4,2]}""",
			"""{"bins":[1,1,1,5,4,2]}""",
			"""{"bins":[3,1,1,5,4,2]}""",
			"""{"bins":[5,1,1,5,4,2]}""",
			"""{"bins":[1,3,1,5,4,2]}""",
			"""{"bins":[3,3,1,5,4,2]}""",
			"""{"bins":[5,3,1,5,4,2]}""",
			"""{"bins":[1,5,1,5,4,2]}""",
			"""{"bins":[3,5,1,5,4,2]}""",
			"""{"bins":[1,1,3,5,4,2]}""",
			"""{"bins":[3,1,3,5,4,2]}""",
			"""{"bins":[5,1,3,5,4,2]}""",
			"""{"bins":[1,3,3,5,4,2]}""",
			"""{"bins":[3,3,3,5,4,2]}""",
			"""{"bins":[5,3,3,5,4,2]}""",
			"""{"bins":[1,5,3,5,4,2]}""",
			"""{"bins":[3,5,3,5,4,2]}""",
			"""{"bins":[1,1,5,5,4,2]}""",
			"""{"bins":[3,1,5,5,4,2]}""",
			"""{"bins":[1,3,5,5,4,2]}""",
			"""{"bins":[3,3,5,5,4,2]}""",
			"""{"bins":[3,3,1,1,5,2]}""",
			"""{"bins":[4,3,1,1,5,2]}""",
			"""{"bins":[3,4,1,1,5,2]}""",
			"""{"bins":[4,4,1,1,5,2]}""",
			"""{"bins":[3,1,3,1,5,2]}""",
			"""{"bins":[4,1,3,1,5,2]}""",
			"""{"bins":[1,3,3,1,5,2]}""",
			"""{"bins":[3,3,3,1,5,2]}""",
			"""{"bins":[4,3,3,1,5,2]}""",
			"""{"bins":[1,4,3,1,5,2]}""",
			"""{"bins":[3,4,3,1,5,2]}""",
			"""{"bins":[4,4,3,1,5,2]}""",
			"""{"bins":[3,1,4,1,5,2]}""",
			"""{"bins":[4,1,4,1,5,2]}""",
			"""{"bins":[1,3,4,1,5,2]}""",
			"""{"bins":[3,3,4,1,5,2]}""",
			"""{"bins":[4,3,4,1,5,2]}""",
			"""{"bins":[1,4,4,1,5,2]}""",
			"""{"bins":[3,4,4,1,5,2]}""",
			"""{"bins":[4,4,4,1,5,2]}""",
			"""{"bins":[1,1,1,3,5,2]}""",
			"""{"bins":[3,1,1,3,5,2]}""",
			"""{"bins":[4,1,1,3,5,2]}""",
			"""{"bins":[1,3,1,3,5,2]}""",
			"""{"bins":[4,3,1,3,5,2]}""",
			"""{"bins":[1,4,1,3,5,2]}""",
			"""{"bins":[3,4,1,3,5,2]}""",
			"""{"bins":[4,4,1,3,5,2]}""",
			"""{"bins":[1,1,3,3,5,2]}""",
			"""{"bins":[4,1,3,3,5,2]}""",
			"""{"bins":[1,4,3,3,5,2]}""",
			"""{"bins":[4,4,3,3,5,2]}""",
			"""{"bins":[1,1,4,3,5,2]}""",
			"""{"bins":[3,1,4,3,5,2]}""",
			"""{"bins":[4,1,4,3,5,2]}""",
			"""{"bins":[1,3,4,3,5,2]}""",
			"""{"bins":[4,3,4,3,5,2]}""",
			"""{"bins":[1,4,4,3,5,2]}""",
			"""{"bins":[3,4,4,3,5,2]}""",
			"""{"bins":[4,4,4,3,5,2]}""",
			"""{"bins":[1,1,1,4,5,2]}""",
			"""{"bins":[3,1,1,4,5,2]}""",
			"""{"bins":[4,1,1,4,5,2]}""",
			"""{"bins":[1,3,1,4,5,2]}""",
			"""{"bins":[3,3,1,4,5,2]}""",
			"""{"bins":[4,3,1,4,5,2]}""",
			"""{"bins":[1,4,1,4,5,2]}""",
			"""{"bins":[3,4,1,4,5,2]}""",
			"""{"bins":[1,1,3,4,5,2]}""",
			"""{"bins":[3,1,3,4,5,2]}""",
			"""{"bins":[4,1,3,4,5,2]}""",
			"""{"bins":[1,3,3,4,5,2]}""",
			"""{"bins":[3,3,3,4,5,2]}""",
			"""{"bins":[4,3,3,4,5,2]}""",
			"""{"bins":[1,4,3,4,5,2]}""",
			"""{"bins":[3,4,3,4,5,2]}""",
			"""{"bins":[1,1,4,4,5,2]}""",
			"""{"bins":[3,1,4,4,5,2]}""",
			"""{"bins":[1,3,4,4,5,2]}""",
			"""{"bins":[3,3,4,4,5,2]}""",
			"""{"bins":[4,4,2,2,1,3]}""",
			"""{"bins":[5,4,2,2,1,3]}""",
			"""{"bins":[4,5,2,2,1,3]}""",
			"""{"bins":[5,5,2,2,1,3]}""",
			"""{"bins":[4,2,4,2,1,3]}""",
			"""{"bins":[5,2,4,2,1,3]}""",
			"""{"bins":[2,4,4,2,1,3]}""",
			"""{"bins":[4,4,4,2,1,3]}""",
			"""{"bins":[5,4,4,2,1,3]}""",
			"""{"bins":[2,5,4,2,1,3]}""",
			"""{"bins":[4,5,4,2,1,3]}""",
			"""{"bins":[5,5,4,2,1,3]}""",
			"""{"bins":[4,2,5,2,1,3]}""",
			"""{"bins":[5,2,5,2,1,3]}""",
			"""{"bins":[2,4,5,2,1,3]}""",
			"""{"bins":[4,4,5,2,1,3]}""",
			"""{"bins":[5,4,5,2,1,3]}""",
			"""{"bins":[2,5,5,2,1,3]}""",
			"""{"bins":[4,5,5,2,1,3]}""",
			"""{"bins":[5,5,5,2,1,3]}""",
			"""{"bins":[2,2,2,4,1,3]}""",
			"""{"bins":[4,2,2,4,1,3]}""",
			"""{"bins":[5,2,2,4,1,3]}""",
			"""{"bins":[2,4,2,4,1,3]}""",
			"""{"bins":[5,4,2,4,1,3]}""",
			"""{"bins":[2,5,2,4,1,3]}""",
			"""{"bins":[4,5,2,4,1,3]}""",
			"""{"bins":[5,5,2,4,1,3]}""",
			"""{"bins":[2,2,4,4,1,3]}""",
			"""{"bins":[5,2,4,4,1,3]}""",
			"""{"bins":[2,5,4,4,1,3]}""",
			"""{"bins":[5,5,4,4,1,3]}""",
			"""{"bins":[2,2,5,4,1,3]}""",
			"""{"bins":[4,2,5,4,1,3]}""",
			"""{"bins":[5,2,5,4,1,3]}""",
			"""{"bins":[2,4,5,4,1,3]}""",
			"""{"bins":[5,4,5,4,1,3]}""",
			"""{"bins":[2,5,5,4,1,3]}""",
			"""{"bins":[4,5,5,4,1,3]}""",
			"""{"bins":[5,5,5,4,1,3]}""",
			"""{"bins":[2,2,2,5,1,3]}""",
			"""{"bins":[4,2,2,5,1,3]}""",
			"""{"bins":[5,2,2,5,1,3]}""",
			"""{"bins":[2,4,2,5,1,3]}""",
			"""{"bins":[4,4,2,5,1,3]}""",
			"""{"bins":[5,4,2,5,1,3]}""",
			"""{"bins":[2,5,2,5,1,3]}""",
			"""{"bins":[4,5,2,5,1,3]}""",
			"""{"bins":[2,2,4,5,1,3]}""",
			"""{"bins":[4,2,4,5,1,3]}""",
			"""{"bins":[5,2,4,5,1,3]}""",
			"""{"bins":[2,4,4,5,1,3]}""",
			"""{"bins":[4,4,4,5,1,3]}""",
			"""{"bins":[5,4,4,5,1,3]}""",
			"""{"bins":[2,5,4,5,1,3]}""",
			"""{"bins":[4,5,4,5,1,3]}""",
			"""{"bins":[2,2,5,5,1,3]}""",
			"""{"bins":[4,2,5,5,1,3]}""",
			"""{"bins":[2,4,5,5,1,3]}""",
			"""{"bins":[4,4,5,5,1,3]}""",
			"""{"bins":[4,4,1,1,2,3]}""",
			"""{"bins":[5,4,1,1,2,3]}""",
			"""{"bins":[4,5,1,1,2,3]}""",
			"""{"bins":[5,5,1,1,2,3]}""",
			"""{"bins":[4,1,4,1,2,3]}""",
			"""{"bins":[5,1,4,1,2,3]}""",
			"""{"bins":[1,4,4,1,2,3]}""",
			"""{"bins":[4,4,4,1,2,3]}""",
			"""{"bins":[5,4,4,1,2,3]}""",
			"""{"bins":[1,5,4,1,2,3]}""",
			"""{"bins":[4,5,4,1,2,3]}""",
			"""{"bins":[5,5,4,1,2,3]}""",
			"""{"bins":[4,1,5,1,2,3]}""",
			"""{"bins":[5,1,5,1,2,3]}""",
			"""{"bins":[1,4,5,1,2,3]}""",
			"""{"bins":[4,4,5,1,2,3]}""",
			"""{"bins":[5,4,5,1,2,3]}""",
			"""{"bins":[1,5,5,1,2,3]}""",
			"""{"bins":[4,5,5,1,2,3]}""",
			"""{"bins":[5,5,5,1,2,3]}""",
			"""{"bins":[1,1,1,4,2,3]}""",
			"""{"bins":[4,1,1,4,2,3]}""",
			"""{"bins":[5,1,1,4,2,3]}""",
			"""{"bins":[1,4,1,4,2,3]}""",
			"""{"bins":[5,4,1,4,2,3]}""",
			"""{"bins":[1,5,1,4,2,3]}""",
			"""{"bins":[4,5,1,4,2,3]}""",
			"""{"bins":[5,5,1,4,2,3]}""",
			"""{"bins":[1,1,4,4,2,3]}""",
			"""{"bins":[5,1,4,4,2,3]}""",
			"""{"bins":[1,5,4,4,2,3]}""",
			"""{"bins":[5,5,4,4,2,3]}""",
			"""{"bins":[1,1,5,4,2,3]}""",
			"""{"bins":[4,1,5,4,2,3]}""",
			"""{"bins":[5,1,5,4,2,3]}""",
			"""{"bins":[1,4,5,4,2,3]}""",
			"""{"bins":[5,4,5,4,2,3]}""",
			"""{"bins":[1,5,5,4,2,3]}""",
			"""{"bins":[4,5,5,4,2,3]}""",
			"""{"bins":[5,5,5,4,2,3]}""",
			"""{"bins":[1,1,1,5,2,3]}""",
			"""{"bins":[4,1,1,5,2,3]}""",
			"""{"bins":[5,1,1,5,2,3]}""",
			"""{"bins":[1,4,1,5,2,3]}""",
			"""{"bins":[4,4,1,5,2,3]}""",
			"""{"bins":[5,4,1,5,2,3]}""",
			"""{"bins":[1,5,1,5,2,3]}""",
			"""{"bins":[4,5,1,5,2,3]}""",
			"""{"bins":[1,1,4,5,2,3]}""",
			"""{"bins":[4,1,4,5,2,3]}""",
			"""{"bins":[5,1,4,5,2,3]}""",
			"""{"bins":[1,4,4,5,2,3]}""",
			"""{"bins":[4,4,4,5,2,3]}""",
			"""{"bins":[5,4,4,5,2,3]}""",
			"""{"bins":[1,5,4,5,2,3]}""",
			"""{"bins":[4,5,4,5,2,3]}""",
			"""{"bins":[1,1,5,5,2,3]}""",
			"""{"bins":[4,1,5,5,2,3]}""",
			"""{"bins":[1,4,5,5,2,3]}""",
			"""{"bins":[4,4,5,5,2,3]}""",
			"""{"bins":[2,2,1,1,4,3]}""",
			"""{"bins":[5,2,1,1,4,3]}""",
			"""{"bins":[2,5,1,1,4,3]}""",
			"""{"bins":[5,5,1,1,4,3]}""",
			"""{"bins":[2,1,2,1,4,3]}""",
			"""{"bins":[5,1,2,1,4,3]}""",
			"""{"bins":[1,2,2,1,4,3]}""",
			"""{"bins":[2,2,2,1,4,3]}""",
			"""{"bins":[5,2,2,1,4,3]}""",
			"""{"bins":[1,5,2,1,4,3]}""",
			"""{"bins":[2,5,2,1,4,3]}""",
			"""{"bins":[5,5,2,1,4,3]}""",
			"""{"bins":[2,1,5,1,4,3]}""",
			"""{"bins":[5,1,5,1,4,3]}""",
			"""{"bins":[1,2,5,1,4,3]}""",
			"""{"bins":[2,2,5,1,4,3]}""",
			"""{"bins":[5,2,5,1,4,3]}""",
			"""{"bins":[1,5,5,1,4,3]}""",
			"""{"bins":[2,5,5,1,4,3]}""",
			"""{"bins":[5,5,5,1,4,3]}""",
			"""{"bins":[1,1,1,2,4,3]}""",
			"""{"bins":[2,1,1,2,4,3]}""",
			"""{"bins":[5,1,1,2,4,3]}""",
			"""{"bins":[1,2,1,2,4,3]}""",
			"""{"bins":[5,2,1,2,4,3]}""",
			"""{"bins":[1,5,1,2,4,3]}""",
			"""{"bins":[2,5,1,2,4,3]}""",
			"""{"bins":[5,5,1,2,4,3]}""",
			"""{"bins":[1,1,2,2,4,3]}""",
			"""{"bins":[5,1,2,2,4,3]}""",
			"""{"bins":[1,5,2,2,4,3]}""",
			"""{"bins":[5,5,2,2,4,3]}""",
			"""{"bins":[1,1,5,2,4,3]}""",
			"""{"bins":[2,1,5,2,4,3]}""",
			"""{"bins":[5,1,5,2,4,3]}""",
			"""{"bins":[1,2,5,2,4,3]}""",
			"""{"bins":[5,2,5,2,4,3]}""",
			"""{"bins":[1,5,5,2,4,3]}""",
			"""{"bins":[2,5,5,2,4,3]}""",
			"""{"bins":[5,5,5,2,4,3]}""",
			"""{"bins":[1,1,1,5,4,3]}""",
			"""{"bins":[2,1,1,5,4,3]}""",
			"""{"bins":[5,1,1,5,4,3]}""",
			"""{"bins":[1,2,1,5,4,3]}""",
			"""{"bins":[2,2,1,5,4,3]}""",
			"""{"bins":[5,2,1,5,4,3]}""",
			"""{"bins":[1,5,1,5,4,3]}""",
			"""{"bins":[2,5,1,5,4,3]}""",
			"""{"bins":[1,1,2,5,4,3]}""",
			"""{"bins":[2,1,2,5,4,3]}""",
			"""{"bins":[5,1,2,5,4,3]}""",
			"""{"bins":[1,2,2,5,4,3]}""",
			"""{"bins":[2,2,2,5,4,3]}""",
			"""{"bins":[5,2,2,5,4,3]}""",
			"""{"bins":[1,5,2,5,4,3]}""",
			"""{"bins":[2,5,2,5,4,3]}""",
			"""{"bins":[1,1,5,5,4,3]}""",
			"""{"bins":[2,1,5,5,4,3]}""",
			"""{"bins":[1,2,5,5,4,3]}""",
			"""{"bins":[2,2,5,5,4,3]}""",
			"""{"bins":[2,2,1,1,5,3]}""",
			"""{"bins":[4,2,1,1,5,3]}""",
			"""{"bins":[2,4,1,1,5,3]}""",
			"""{"bins":[4,4,1,1,5,3]}""",
			"""{"bins":[2,1,2,1,5,3]}""",
			"""{"bins":[4,1,2,1,5,3]}""",
			"""{"bins":[1,2,2,1,5,3]}""",
			"""{"bins":[2,2,2,1,5,3]}""",
			"""{"bins":[4,2,2,1,5,3]}""",
			"""{"bins":[1,4,2,1,5,3]}""",
			"""{"bins":[2,4,2,1,5,3]}""",
			"""{"bins":[4,4,2,1,5,3]}""",
			"""{"bins":[2,1,4,1,5,3]}""",
			"""{"bins":[4,1,4,1,5,3]}""",
			"""{"bins":[1,2,4,1,5,3]}""",
			"""{"bins":[2,2,4,1,5,3]}""",
			"""{"bins":[4,2,4,1,5,3]}""",
			"""{"bins":[1,4,4,1,5,3]}""",
			"""{"bins":[2,4,4,1,5,3]}""",
			"""{"bins":[4,4,4,1,5,3]}""",
			"""{"bins":[1,1,1,2,5,3]}""",
			"""{"bins":[2,1,1,2,5,3]}""",
			"""{"bins":[4,1,1,2,5,3]}""",
			"""{"bins":[1,2,1,2,5,3]}""",
			"""{"bins":[4,2,1,2,5,3]}""",
			"""{"bins":[1,4,1,2,5,3]}""",
			"""{"bins":[2,4,1,2,5,3]}""",
			"""{"bins":[4,4,1,2,5,3]}""",
			"""{"bins":[1,1,2,2,5,3]}""",
			"""{"bins":[4,1,2,2,5,3]}""",
			"""{"bins":[1,4,2,2,5,3]}""",
			"""{"bins":[4,4,2,2,5,3]}""",
			"""{"bins":[1,1,4,2,5,3]}""",
			"""{"bins":[2,1,4,2,5,3]}""",
			"""{"bins":[4,1,4,2,5,3]}""",
			"""{"bins":[1,2,4,2,5,3]}""",
			"""{"bins":[4,2,4,2,5,3]}""",
			"""{"bins":[1,4,4,2,5,3]}""",
			"""{"bins":[2,4,4,2,5,3]}""",
			"""{"bins":[4,4,4,2,5,3]}""",
			"""{"bins":[1,1,1,4,5,3]}""",
			"""{"bins":[2,1,1,4,5,3]}""",
			"""{"bins":[4,1,1,4,5,3]}""",
			"""{"bins":[1,2,1,4,5,3]}""",
			"""{"bins":[2,2,1,4,5,3]}""",
			"""{"bins":[4,2,1,4,5,3]}""",
			"""{"bins":[1,4,1,4,5,3]}""",
			"""{"bins":[2,4,1,4,5,3]}""",
			"""{"bins":[1,1,2,4,5,3]}""",
			"""{"bins":[2,1,2,4,5,3]}""",
			"""{"bins":[4,1,2,4,5,3]}""",
			"""{"bins":[1,2,2,4,5,3]}""",
			"""{"bins":[2,2,2,4,5,3]}""",
			"""{"bins":[4,2,2,4,5,3]}""",
			"""{"bins":[1,4,2,4,5,3]}""",
			"""{"bins":[2,4,2,4,5,3]}""",
			"""{"bins":[1,1,4,4,5,3]}""",
			"""{"bins":[2,1,4,4,5,3]}""",
			"""{"bins":[1,2,4,4,5,3]}""",
			"""{"bins":[2,2,4,4,5,3]}""",
			"""{"bins":[3,3,2,2,1,4]}""",
			"""{"bins":[5,3,2,2,1,4]}""",
			"""{"bins":[3,5,2,2,1,4]}""",
			"""{"bins":[5,5,2,2,1,4]}""",
			"""{"bins":[3,2,3,2,1,4]}""",
			"""{"bins":[5,2,3,2,1,4]}""",
			"""{"bins":[2,3,3,2,1,4]}""",
			"""{"bins":[3,3,3,2,1,4]}""",
			"""{"bins":[5,3,3,2,1,4]}""",
			"""{"bins":[2,5,3,2,1,4]}""",
			"""{"bins":[3,5,3,2,1,4]}""",
			"""{"bins":[5,5,3,2,1,4]}""",
			"""{"bins":[3,2,5,2,1,4]}""",
			"""{"bins":[5,2,5,2,1,4]}""",
			"""{"bins":[2,3,5,2,1,4]}""",
			"""{"bins":[3,3,5,2,1,4]}""",
			"""{"bins":[5,3,5,2,1,4]}""",
			"""{"bins":[2,5,5,2,1,4]}""",
			"""{"bins":[3,5,5,2,1,4]}""",
			"""{"bins":[5,5,5,2,1,4]}""",
			"""{"bins":[2,2,2,3,1,4]}""",
			"""{"bins":[3,2,2,3,1,4]}""",
			"""{"bins":[5,2,2,3,1,4]}""",
			"""{"bins":[2,3,2,3,1,4]}""",
			"""{"bins":[5,3,2,3,1,4]}""",
			"""{"bins":[2,5,2,3,1,4]}""",
			"""{"bins":[3,5,2,3,1,4]}""",
			"""{"bins":[5,5,2,3,1,4]}""",
			"""{"bins":[2,2,3,3,1,4]}""",
			"""{"bins":[5,2,3,3,1,4]}""",
			"""{"bins":[2,5,3,3,1,4]}""",
			"""{"bins":[5,5,3,3,1,4]}""",
			"""{"bins":[2,2,5,3,1,4]}""",
			"""{"bins":[3,2,5,3,1,4]}""",
			"""{"bins":[5,2,5,3,1,4]}""",
			"""{"bins":[2,3,5,3,1,4]}""",
			"""{"bins":[5,3,5,3,1,4]}""",
			"""{"bins":[2,5,5,3,1,4]}""",
			"""{"bins":[3,5,5,3,1,4]}""",
			"""{"bins":[5,5,5,3,1,4]}""",
			"""{"bins":[2,2,2,5,1,4]}""",
			"""{"bins":[3,2,2,5,1,4]}""",
			"""{"bins":[5,2,2,5,1,4]}""",
			"""{"bins":[2,3,2,5,1,4]}""",
			"""{"bins":[3,3,2,5,1,4]}""",
			"""{"bins":[5,3,2,5,1,4]}""",
			"""{"bins":[2,5,2,5,1,4]}""",
			"""{"bins":[3,5,2,5,1,4]}""",
			"""{"bins":[2,2,3,5,1,4]}""",
			"""{"bins":[3,2,3,5,1,4]}""",
			"""{"bins":[5,2,3,5,1,4]}""",
			"""{"bins":[2,3,3,5,1,4]}""",
			"""{"bins":[3,3,3,5,1,4]}""",
			"""{"bins":[5,3,3,5,1,4]}""",
			"""{"bins":[2,5,3,5,1,4]}""",
			"""{"bins":[3,5,3,5,1,4]}""",
			"""{"bins":[2,2,5,5,1,4]}""",
			"""{"bins":[3,2,5,5,1,4]}""",
			"""{"bins":[2,3,5,5,1,4]}""",
			"""{"bins":[3,3,5,5,1,4]}""",
			"""{"bins":[3,3,1,1,2,4]}""",
			"""{"bins":[5,3,1,1,2,4]}""",
			"""{"bins":[3,5,1,1,2,4]}""",
			"""{"bins":[5,5,1,1,2,4]}""",
			"""{"bins":[3,1,3,1,2,4]}""",
			"""{"bins":[5,1,3,1,2,4]}""",
			"""{"bins":[1,3,3,1,2,4]}""",
			"""{"bins":[3,3,3,1,2,4]}""",
			"""{"bins":[5,3,3,1,2,4]}""",
			"""{"bins":[1,5,3,1,2,4]}""",
			"""{"bins":[3,5,3,1,2,4]}""",
			"""{"bins":[5,5,3,1,2,4]}""",
			"""{"bins":[3,1,5,1,2,4]}""",
			"""{"bins":[5,1,5,1,2,4]}""",
			"""{"bins":[1,3,5,1,2,4]}""",
			"""{"bins":[3,3,5,1,2,4]}""",
			"""{"bins":[5,3,5,1,2,4]}""",
			"""{"bins":[1,5,5,1,2,4]}""",
			"""{"bins":[3,5,5,1,2,4]}""",
			"""{"bins":[5,5,5,1,2,4]}""",
			"""{"bins":[1,1,1,3,2,4]}""",
			"""{"bins":[3,1,1,3,2,4]}""",
			"""{"bins":[5,1,1,3,2,4]}""",
			"""{"bins":[1,3,1,3,2,4]}""",
			"""{"bins":[5,3,1,3,2,4]}""",
			"""{"bins":[1,5,1,3,2,4]}""",
			"""{"bins":[3,5,1,3,2,4]}""",
			"""{"bins":[5,5,1,3,2,4]}""",
			"""{"bins":[1,1,3,3,2,4]}""",
			"""{"bins":[5,1,3,3,2,4]}""",
			"""{"bins":[1,5,3,3,2,4]}""",
			"""{"bins":[5,5,3,3,2,4]}""",
			"""{"bins":[1,1,5,3,2,4]}""",
			"""{"bins":[3,1,5,3,2,4]}""",
			"""{"bins":[5,1,5,3,2,4]}""",
			"""{"bins":[1,3,5,3,2,4]}""",
			"""{"bins":[5,3,5,3,2,4]}""",
			"""{"bins":[1,5,5,3,2,4]}""",
			"""{"bins":[3,5,5,3,2,4]}""",
			"""{"bins":[5,5,5,3,2,4]}""",
			"""{"bins":[1,1,1,5,2,4]}""",
			"""{"bins":[3,1,1,5,2,4]}""",
			"""{"bins":[5,1,1,5,2,4]}""",
			"""{"bins":[1,3,1,5,2,4]}""",
			"""{"bins":[3,3,1,5,2,4]}""",
			"""{"bins":[5,3,1,5,2,4]}""",
			"""{"bins":[1,5,1,5,2,4]}""",
			"""{"bins":[3,5,1,5,2,4]}""",
			"""{"bins":[1,1,3,5,2,4]}""",
			"""{"bins":[3,1,3,5,2,4]}""",
			"""{"bins":[5,1,3,5,2,4]}""",
			"""{"bins":[1,3,3,5,2,4]}""",
			"""{"bins":[3,3,3,5,2,4]}""",
			"""{"bins":[5,3,3,5,2,4]}""",
			"""{"bins":[1,5,3,5,2,4]}""",
			"""{"bins":[3,5,3,5,2,4]}""",
			"""{"bins":[1,1,5,5,2,4]}""",
			"""{"bins":[3,1,5,5,2,4]}""",
			"""{"bins":[1,3,5,5,2,4]}""",
			"""{"bins":[3,3,5,5,2,4]}""",
			"""{"bins":[2,2,1,1,3,4]}""",
			"""{"bins":[5,2,1,1,3,4]}""",
			"""{"bins":[2,5,1,1,3,4]}""",
			"""{"bins":[5,5,1,1,3,4]}""",
			"""{"bins":[2,1,2,1,3,4]}""",
			"""{"bins":[5,1,2,1,3,4]}""",
			"""{"bins":[1,2,2,1,3,4]}""",
			"""{"bins":[2,2,2,1,3,4]}""",
			"""{"bins":[5,2,2,1,3,4]}""",
			"""{"bins":[1,5,2,1,3,4]}""",
			"""{"bins":[2,5,2,1,3,4]}""",
			"""{"bins":[5,5,2,1,3,4]}""",
			"""{"bins":[2,1,5,1,3,4]}""",
			"""{"bins":[5,1,5,1,3,4]}""",
			"""{"bins":[1,2,5,1,3,4]}""",
			"""{"bins":[2,2,5,1,3,4]}""",
			"""{"bins":[5,2,5,1,3,4]}""",
			"""{"bins":[1,5,5,1,3,4]}""",
			"""{"bins":[2,5,5,1,3,4]}""",
			"""{"bins":[5,5,5,1,3,4]}""",
			"""{"bins":[1,1,1,2,3,4]}""",
			"""{"bins":[2,1,1,2,3,4]}""",
			"""{"bins":[5,1,1,2,3,4]}""",
			"""{"bins":[1,2,1,2,3,4]}""",
			"""{"bins":[5,2,1,2,3,4]}""",
			"""{"bins":[1,5,1,2,3,4]}""",
			"""{"bins":[2,5,1,2,3,4]}""",
			"""{"bins":[5,5,1,2,3,4]}""",
			"""{"bins":[1,1,2,2,3,4]}""",
			"""{"bins":[5,1,2,2,3,4]}""",
			"""{"bins":[1,5,2,2,3,4]}""",
			"""{"bins":[5,5,2,2,3,4]}""",
			"""{"bins":[1,1,5,2,3,4]}""",
			"""{"bins":[2,1,5,2,3,4]}""",
			"""{"bins":[5,1,5,2,3,4]}""",
			"""{"bins":[1,2,5,2,3,4]}""",
			"""{"bins":[5,2,5,2,3,4]}""",
			"""{"bins":[1,5,5,2,3,4]}""",
			"""{"bins":[2,5,5,2,3,4]}""",
			"""{"bins":[5,5,5,2,3,4]}""",
			"""{"bins":[1,1,1,5,3,4]}""",
			"""{"bins":[2,1,1,5,3,4]}""",
			"""{"bins":[5,1,1,5,3,4]}""",
			"""{"bins":[1,2,1,5,3,4]}""",
			"""{"bins":[2,2,1,5,3,4]}""",
			"""{"bins":[5,2,1,5,3,4]}""",
			"""{"bins":[1,5,1,5,3,4]}""",
			"""{"bins":[2,5,1,5,3,4]}""",
			"""{"bins":[1,1,2,5,3,4]}""",
			"""{"bins":[2,1,2,5,3,4]}""",
			"""{"bins":[5,1,2,5,3,4]}""",
			"""{"bins":[1,2,2,5,3,4]}""",
			"""{"bins":[2,2,2,5,3,4]}""",
			"""{"bins":[5,2,2,5,3,4]}""",
			"""{"bins":[1,5,2,5,3,4]}""",
			"""{"bins":[2,5,2,5,3,4]}""",
			"""{"bins":[1,1,5,5,3,4]}""",
			"""{"bins":[2,1,5,5,3,4]}""",
			"""{"bins":[1,2,5,5,3,4]}""",
			"""{"bins":[2,2,5,5,3,4]}""",
			"""{"bins":[2,2,1,1,5,4]}""",
			"""{"bins":[3,2,1,1,5,4]}""",
			"""{"bins":[2,3,1,1,5,4]}""",
			"""{"bins":[3,3,1,1,5,4]}""",
			"""{"bins":[2,1,2,1,5,4]}""",
			"""{"bins":[3,1,2,1,5,4]}""",
			"""{"bins":[1,2,2,1,5,4]}""",
			"""{"bins":[2,2,2,1,5,4]}""",
			"""{"bins":[3,2,2,1,5,4]}""",
			"""{"bins":[1,3,2,1,5,4]}""",
			"""{"bins":[2,3,2,1,5,4]}""",
			"""{"bins":[3,3,2,1,5,4]}""",
			"""{"bins":[2,1,3,1,5,4]}""",
			"""{"bins":[3,1,3,1,5,4]}""",
			"""{"bins":[1,2,3,1,5,4]}""",
			"""{"bins":[2,2,3,1,5,4]}""",
			"""{"bins":[3,2,3,1,5,4]}""",
			"""{"bins":[1,3,3,1,5,4]}""",
			"""{"bins":[2,3,3,1,5,4]}""",
			"""{"bins":[3,3,3,1,5,4]}""",
			"""{"bins":[1,1,1,2,5,4]}""",
			"""{"bins":[2,1,1,2,5,4]}""",
			"""{"bins":[3,1,1,2,5,4]}""",
			"""{"bins":[1,2,1,2,5,4]}""",
			"""{"bins":[3,2,1,2,5,4]}""",
			"""{"bins":[1,3,1,2,5,4]}""",
			"""{"bins":[2,3,1,2,5,4]}""",
			"""{"bins":[3,3,1,2,5,4]}""",
			"""{"bins":[1,1,2,2,5,4]}""",
			"""{"bins":[3,1,2,2,5,4]}""",
			"""{"bins":[1,3,2,2,5,4]}""",
			"""{"bins":[3,3,2,2,5,4]}""",
			"""{"bins":[1,1,3,2,5,4]}""",
			"""{"bins":[2,1,3,2,5,4]}""",
			"""{"bins":[3,1,3,2,5,4]}""",
			"""{"bins":[1,2,3,2,5,4]}""",
			"""{"bins":[3,2,3,2,5,4]}""",
			"""{"bins":[1,3,3,2,5,4]}""",
			"""{"bins":[2,3,3,2,5,4]}""",
			"""{"bins":[3,3,3,2,5,4]}""",
			"""{"bins":[1,1,1,3,5,4]}""",
			"""{"bins":[2,1,1,3,5,4]}""",
			"""{"bins":[3,1,1,3,5,4]}""",
			"""{"bins":[1,2,1,3,5,4]}""",
			"""{"bins":[2,2,1,3,5,4]}""",
			"""{"bins":[3,2,1,3,5,4]}""",
			"""{"bins":[1,3,1,3,5,4]}""",
			"""{"bins":[2,3,1,3,5,4]}""",
			"""{"bins":[1,1,2,3,5,4]}""",
			"""{"bins":[2,1,2,3,5,4]}""",
			"""{"bins":[3,1,2,3,5,4]}""",
			"""{"bins":[1,2,2,3,5,4]}""",
			"""{"bins":[2,2,2,3,5,4]}""",
			"""{"bins":[3,2,2,3,5,4]}""",
			"""{"bins":[1,3,2,3,5,4]}""",
			"""{"bins":[2,3,2,3,5,4]}""",
			"""{"bins":[1,1,3,3,5,4]}""",
			"""{"bins":[2,1,3,3,5,4]}""",
			"""{"bins":[1,2,3,3,5,4]}""",
			"""{"bins":[2,2,3,3,5,4]}""",
			"""{"bins":[3,3,2,2,1,5]}""",
			"""{"bins":[4,3,2,2,1,5]}""",
			"""{"bins":[3,4,2,2,1,5]}""",
			"""{"bins":[4,4,2,2,1,5]}""",
			"""{"bins":[3,2,3,2,1,5]}""",
			"""{"bins":[4,2,3,2,1,5]}""",
			"""{"bins":[2,3,3,2,1,5]}""",
			"""{"bins":[3,3,3,2,1,5]}""",
			"""{"bins":[4,3,3,2,1,5]}""",
			"""{"bins":[2,4,3,2,1,5]}""",
			"""{"bins":[3,4,3,2,1,5]}""",
			"""{"bins":[4,4,3,2,1,5]}""",
			"""{"bins":[3,2,4,2,1,5]}""",
			"""{"bins":[4,2,4,2,1,5]}""",
			"""{"bins":[2,3,4,2,1,5]}""",
			"""{"bins":[3,3,4,2,1,5]}""",
			"""{"bins":[4,3,4,2,1,5]}""",
			"""{"bins":[2,4,4,2,1,5]}""",
			"""{"bins":[3,4,4,2,1,5]}""",
			"""{"bins":[4,4,4,2,1,5]}""",
			"""{"bins":[2,2,2,3,1,5]}""",
			"""{"bins":[3,2,2,3,1,5]}""",
			"""{"bins":[4,2,2,3,1,5]}""",
			"""{"bins":[2,3,2,3,1,5]}""",
			"""{"bins":[4,3,2,3,1,5]}""",
			"""{"bins":[2,4,2,3,1,5]}""",
			"""{"bins":[3,4,2,3,1,5]}""",
			"""{"bins":[4,4,2,3,1,5]}""",
			"""{"bins":[2,2,3,3,1,5]}""",
			"""{"bins":[4,2,3,3,1,5]}""",
			"""{"bins":[2,4,3,3,1,5]}""",
			"""{"bins":[4,4,3,3,1,5]}""",
			"""{"bins":[2,2,4,3,1,5]}""",
			"""{"bins":[3,2,4,3,1,5]}""",
			"""{"bins":[4,2,4,3,1,5]}""",
			"""{"bins":[2,3,4,3,1,5]}""",
			"""{"bins":[4,3,4,3,1,5]}""",
			"""{"bins":[2,4,4,3,1,5]}""",
			"""{"bins":[3,4,4,3,1,5]}""",
			"""{"bins":[4,4,4,3,1,5]}""",
			"""{"bins":[2,2,2,4,1,5]}""",
			"""{"bins":[3,2,2,4,1,5]}""",
			"""{"bins":[4,2,2,4,1,5]}""",
			"""{"bins":[2,3,2,4,1,5]}""",
			"""{"bins":[3,3,2,4,1,5]}""",
			"""{"bins":[4,3,2,4,1,5]}""",
			"""{"bins":[2,4,2,4,1,5]}""",
			"""{"bins":[3,4,2,4,1,5]}""",
			"""{"bins":[2,2,3,4,1,5]}""",
			"""{"bins":[3,2,3,4,1,5]}""",
			"""{"bins":[4,2,3,4,1,5]}""",
			"""{"bins":[2,3,3,4,1,5]}""",
			"""{"bins":[3,3,3,4,1,5]}""",
			"""{"bins":[4,3,3,4,1,5]}""",
			"""{"bins":[2,4,3,4,1,5]}""",
			"""{"bins":[3,4,3,4,1,5]}""",
			"""{"bins":[2,2,4,4,1,5]}""",
			"""{"bins":[3,2,4,4,1,5]}""",
			"""{"bins":[2,3,4,4,1,5]}""",
			"""{"bins":[3,3,4,4,1,5]}""",
			"""{"bins":[3,3,1,1,2,5]}""",
			"""{"bins":[4,3,1,1,2,5]}""",
			"""{"bins":[3,4,1,1,2,5]}""",
			"""{"bins":[4,4,1,1,2,5]}""",
			"""{"bins":[3,1,3,1,2,5]}""",
			"""{"bins":[4,1,3,1,2,5]}""",
			"""{"bins":[1,3,3,1,2,5]}""",
			"""{"bins":[3,3,3,1,2,5]}""",
			"""{"bins":[4,3,3,1,2,5]}""",
			"""{"bins":[1,4,3,1,2,5]}""",
			"""{"bins":[3,4,3,1,2,5]}""",
			"""{"bins":[4,4,3,1,2,5]}""",
			"""{"bins":[3,1,4,1,2,5]}""",
			"""{"bins":[4,1,4,1,2,5]}""",
			"""{"bins":[1,3,4,1,2,5]}""",
			"""{"bins":[3,3,4,1,2,5]}""",
			"""{"bins":[4,3,4,1,2,5]}""",
			"""{"bins":[1,4,4,1,2,5]}""",
			"""{"bins":[3,4,4,1,2,5]}""",
			"""{"bins":[4,4,4,1,2,5]}""",
			"""{"bins":[1,1,1,3,2,5]}""",
			"""{"bins":[3,1,1,3,2,5]}""",
			"""{"bins":[4,1,1,3,2,5]}""",
			"""{"bins":[1,3,1,3,2,5]}""",
			"""{"bins":[4,3,1,3,2,5]}""",
			"""{"bins":[1,4,1,3,2,5]}""",
			"""{"bins":[3,4,1,3,2,5]}""",
			"""{"bins":[4,4,1,3,2,5]}""",
			"""{"bins":[1,1,3,3,2,5]}""",
			"""{"bins":[4,1,3,3,2,5]}""",
			"""{"bins":[1,4,3,3,2,5]}""",
			"""{"bins":[4,4,3,3,2,5]}""",
			"""{"bins":[1,1,4,3,2,5]}""",
			"""{"bins":[3,1,4,3,2,5]}""",
			"""{"bins":[4,1,4,3,2,5]}""",
			"""{"bins":[1,3,4,3,2,5]}""",
			"""{"bins":[4,3,4,3,2,5]}""",
			"""{"bins":[1,4,4,3,2,5]}""",
			"""{"bins":[3,4,4,3,2,5]}""",
			"""{"bins":[4,4,4,3,2,5]}""",
			"""{"bins":[1,1,1,4,2,5]}""",
			"""{"bins":[3,1,1,4,2,5]}""",
			"""{"bins":[4,1,1,4,2,5]}""",
			"""{"bins":[1,3,1,4,2,5]}""",
			"""{"bins":[3,3,1,4,2,5]}""",
			"""{"bins":[4,3,1,4,2,5]}""",
			"""{"bins":[1,4,1,4,2,5]}""",
			"""{"bins":[3,4,1,4,2,5]}""",
			"""{"bins":[1,1,3,4,2,5]}""",
			"""{"bins":[3,1,3,4,2,5]}""",
			"""{"bins":[4,1,3,4,2,5]}""",
			"""{"bins":[1,3,3,4,2,5]}""",
			"""{"bins":[3,3,3,4,2,5]}""",
			"""{"bins":[4,3,3,4,2,5]}""",
			"""{"bins":[1,4,3,4,2,5]}""",
			"""{"bins":[3,4,3,4,2,5]}""",
			"""{"bins":[1,1,4,4,2,5]}""",
			"""{"bins":[3,1,4,4,2,5]}""",
			"""{"bins":[1,3,4,4,2,5]}""",
			"""{"bins":[3,3,4,4,2,5]}""",
			"""{"bins":[2,2,1,1,3,5]}""",
			"""{"bins":[4,2,1,1,3,5]}""",
			"""{"bins":[2,4,1,1,3,5]}""",
			"""{"bins":[4,4,1,1,3,5]}""",
			"""{"bins":[2,1,2,1,3,5]}""",
			"""{"bins":[4,1,2,1,3,5]}""",
			"""{"bins":[1,2,2,1,3,5]}""",
			"""{"bins":[2,2,2,1,3,5]}""",
			"""{"bins":[4,2,2,1,3,5]}""",
			"""{"bins":[1,4,2,1,3,5]}""",
			"""{"bins":[2,4,2,1,3,5]}""",
			"""{"bins":[4,4,2,1,3,5]}""",
			"""{"bins":[2,1,4,1,3,5]}""",
			"""{"bins":[4,1,4,1,3,5]}""",
			"""{"bins":[1,2,4,1,3,5]}""",
			"""{"bins":[2,2,4,1,3,5]}""",
			"""{"bins":[4,2,4,1,3,5]}""",
			"""{"bins":[1,4,4,1,3,5]}""",
			"""{"bins":[2,4,4,1,3,5]}""",
			"""{"bins":[4,4,4,1,3,5]}""",
			"""{"bins":[1,1,1,2,3,5]}""",
			"""{"bins":[2,1,1,2,3,5]}""",
			"""{"bins":[4,1,1,2,3,5]}""",
			"""{"bins":[1,2,1,2,3,5]}""",
			"""{"bins":[4,2,1,2,3,5]}""",
			"""{"bins":[1,4,1,2,3,5]}""",
			"""{"bins":[2,4,1,2,3,5]}""",
			"""{"bins":[4,4,1,2,3,5]}""",
			"""{"bins":[1,1,2,2,3,5]}""",
			"""{"bins":[4,1,2,2,3,5]}""",
			"""{"bins":[1,4,2,2,3,5]}""",
			"""{"bins":[4,4,2,2,3,5]}""",
			"""{"bins":[1,1,4,2,3,5]}""",
			"""{"bins":[2,1,4,2,3,5]}""",
			"""{"bins":[4,1,4,2,3,5]}""",
			"""{"bins":[1,2,4,2,3,5]}""",
			"""{"bins":[4,2,4,2,3,5]}""",
			"""{"bins":[1,4,4,2,3,5]}""",
			"""{"bins":[2,4,4,2,3,5]}""",
			"""{"bins":[4,4,4,2,3,5]}""",
			"""{"bins":[1,1,1,4,3,5]}""",
			"""{"bins":[2,1,1,4,3,5]}""",
			"""{"bins":[4,1,1,4,3,5]}""",
			"""{"bins":[1,2,1,4,3,5]}""",
			"""{"bins":[2,2,1,4,3,5]}""",
			"""{"bins":[4,2,1,4,3,5]}""",
			"""{"bins":[1,4,1,4,3,5]}""",
			"""{"bins":[2,4,1,4,3,5]}""",
			"""{"bins":[1,1,2,4,3,5]}""",
			"""{"bins":[2,1,2,4,3,5]}""",
			"""{"bins":[4,1,2,4,3,5]}""",
			"""{"bins":[1,2,2,4,3,5]}""",
			"""{"bins":[2,2,2,4,3,5]}""",
			"""{"bins":[4,2,2,4,3,5]}""",
			"""{"bins":[1,4,2,4,3,5]}""",
			"""{"bins":[2,4,2,4,3,5]}""",
			"""{"bins":[1,1,4,4,3,5]}""",
			"""{"bins":[2,1,4,4,3,5]}""",
			"""{"bins":[1,2,4,4,3,5]}""",
			"""{"bins":[2,2,4,4,3,5]}""",
			"""{"bins":[2,2,1,1,4,5]}""",
			"""{"bins":[3,2,1,1,4,5]}""",
			"""{"bins":[2,3,1,1,4,5]}""",
			"""{"bins":[3,3,1,1,4,5]}""",
			"""{"bins":[2,1,2,1,4,5]}""",
			"""{"bins":[3,1,2,1,4,5]}""",
			"""{"bins":[1,2,2,1,4,5]}""",
			"""{"bins":[2,2,2,1,4,5]}""",
			"""{"bins":[3,2,2,1,4,5]}""",
			"""{"bins":[1,3,2,1,4,5]}""",
			"""{"bins":[2,3,2,1,4,5]}""",
			"""{"bins":[3,3,2,1,4,5]}""",
			"""{"bins":[2,1,3,1,4,5]}""",
			"""{"bins":[3,1,3,1,4,5]}""",
			"""{"bins":[1,2,3,1,4,5]}""",
			"""{"bins":[2,2,3,1,4,5]}""",
			"""{"bins":[3,2,3,1,4,5]}""",
			"""{"bins":[1,3,3,1,4,5]}""",
			"""{"bins":[2,3,3,1,4,5]}""",
			"""{"bins":[3,3,3,1,4,5]}""",
			"""{"bins":[1,1,1,2,4,5]}""",
			"""{"bins":[2,1,1,2,4,5]}""",
			"""{"bins":[3,1,1,2,4,5]}""",
			"""{"bins":[1,2,1,2,4,5]}""",
			"""{"bins":[3,2,1,2,4,5]}""",
			"""{"bins":[1,3,1,2,4,5]}""",
			"""{"bins":[2,3,1,2,4,5]}""",
			"""{"bins":[3,3,1,2,4,5]}""",
			"""{"bins":[1,1,2,2,4,5]}""",
			"""{"bins":[3,1,2,2,4,5]}""",
			"""{"bins":[1,3,2,2,4,5]}""",
			"""{"bins":[3,3,2,2,4,5]}""",
			"""{"bins":[1,1,3,2,4,5]}""",
			"""{"bins":[2,1,3,2,4,5]}""",
			"""{"bins":[3,1,3,2,4,5]}""",
			"""{"bins":[1,2,3,2,4,5]}""",
			"""{"bins":[3,2,3,2,4,5]}""",
			"""{"bins":[1,3,3,2,4,5]}""",
			"""{"bins":[2,3,3,2,4,5]}""",
			"""{"bins":[3,3,3,2,4,5]}""",
			"""{"bins":[1,1,1,3,4,5]}""",
			"""{"bins":[2,1,1,3,4,5]}""",
			"""{"bins":[3,1,1,3,4,5]}""",
			"""{"bins":[1,2,1,3,4,5]}""",
			"""{"bins":[2,2,1,3,4,5]}""",
			"""{"bins":[3,2,1,3,4,5]}""",
			"""{"bins":[1,3,1,3,4,5]}""",
			"""{"bins":[2,3,1,3,4,5]}""",
			"""{"bins":[1,1,2,3,4,5]}""",
			"""{"bins":[2,1,2,3,4,5]}""",
			"""{"bins":[3,1,2,3,4,5]}""",
			"""{"bins":[1,2,2,3,4,5]}""",
			"""{"bins":[2,2,2,3,4,5]}""",
			"""{"bins":[3,2,2,3,4,5]}""",
			"""{"bins":[1,3,2,3,4,5]}""",
			"""{"bins":[2,3,2,3,4,5]}""",
			"""{"bins":[1,1,3,3,4,5]}""",
			"""{"bins":[2,1,3,3,4,5]}""",
			"""{"bins":[1,2,3,3,4,5]}""",
			"""{"bins":[2,2,3,3,4,5]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/bin_packing_capa/globals_bin_packing_capa.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_bin_packing_capa_globals_bin_packing_capa(string solver)
	{
		var path = "unit/globals/bin_packing_capa/globals_bin_packing_capa.mzn";
		var solutions = new List<string> {
			"""{"bins":[4,2,3,1]}""",
			"""{"bins":[4,2,1,3]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/circuit/test_circuit.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_circuit_test_circuit(string solver)
	{
		var path = "unit/globals/circuit/test_circuit.mzn";
		var solutions = new List<string> {
			"""{"c1":[3,4,2,1],"c2":[4,5,3,2]}""",
			"""{"c1":[2,3,4,1],"c2":[4,5,3,2]}""",
			"""{"c1":[4,3,1,2],"c2":[4,5,3,2]}""",
			"""{"c1":[3,1,4,2],"c2":[4,5,3,2]}""",
			"""{"c1":[2,4,1,3],"c2":[4,5,3,2]}""",
			"""{"c1":[4,1,2,3],"c2":[4,5,3,2]}""",
			"""{"c1":[3,4,2,1],"c2":[3,4,5,2]}""",
			"""{"c1":[2,3,4,1],"c2":[3,4,5,2]}""",
			"""{"c1":[4,3,1,2],"c2":[3,4,5,2]}""",
			"""{"c1":[3,1,4,2],"c2":[3,4,5,2]}""",
			"""{"c1":[2,4,1,3],"c2":[3,4,5,2]}""",
			"""{"c1":[4,1,2,3],"c2":[3,4,5,2]}""",
			"""{"c1":[3,4,2,1],"c2":[5,4,2,3]}""",
			"""{"c1":[2,3,4,1],"c2":[5,4,2,3]}""",
			"""{"c1":[4,3,1,2],"c2":[5,4,2,3]}""",
			"""{"c1":[3,1,4,2],"c2":[5,4,2,3]}""",
			"""{"c1":[2,4,1,3],"c2":[5,4,2,3]}""",
			"""{"c1":[4,1,2,3],"c2":[5,4,2,3]}""",
			"""{"c1":[3,4,2,1],"c2":[4,2,5,3]}""",
			"""{"c1":[2,3,4,1],"c2":[4,2,5,3]}""",
			"""{"c1":[4,3,1,2],"c2":[4,2,5,3]}""",
			"""{"c1":[3,1,4,2],"c2":[4,2,5,3]}""",
			"""{"c1":[2,4,1,3],"c2":[4,2,5,3]}""",
			"""{"c1":[4,1,2,3],"c2":[4,2,5,3]}""",
			"""{"c1":[3,4,2,1],"c2":[3,5,2,4]}""",
			"""{"c1":[2,3,4,1],"c2":[3,5,2,4]}""",
			"""{"c1":[4,3,1,2],"c2":[3,5,2,4]}""",
			"""{"c1":[3,1,4,2],"c2":[3,5,2,4]}""",
			"""{"c1":[2,4,1,3],"c2":[3,5,2,4]}""",
			"""{"c1":[4,1,2,3],"c2":[3,5,2,4]}""",
			"""{"c1":[3,4,2,1],"c2":[5,2,3,4]}""",
			"""{"c1":[2,3,4,1],"c2":[5,2,3,4]}""",
			"""{"c1":[4,3,1,2],"c2":[5,2,3,4]}""",
			"""{"c1":[3,1,4,2],"c2":[5,2,3,4]}""",
			"""{"c1":[2,4,1,3],"c2":[5,2,3,4]}""",
			"""{"c1":[4,1,2,3],"c2":[5,2,3,4]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/globals/cumulative/github_589.mzn")]
	public async Task test_solve_unit_globals_cumulative_github_589()
	{
		var path = "unit/globals/cumulative/github_589.mzn";
		var solver = "gecode";
		var solutions = new List<string>();
		var args = new List<string>{
			"-G std",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/global_cardinality/globals_global_cardinality_low_up_set.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_global_cardinality_globals_global_cardinality_low_up_set(string solver)
	{
		var path = "unit/globals/global_cardinality/globals_global_cardinality_low_up_set.mzn";
		var solutions = new List<string> {
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1,2}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{2}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1,2}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{}"}]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/global_cardinality/globals_global_cardinality_opt.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_global_cardinality_globals_global_cardinality_opt(string solver)
	{
		var path = "unit/globals/global_cardinality/globals_global_cardinality_opt.mzn";
		var solutions = new List<string> {
			"""{"gcc_x":[null,6,7,8,8,6,9,null,null,6],"gcc_c":[3,1,2,1]}""",
			"""{"gcc_x":[null,6,7,6,8,8,9,null,null,6],"gcc_c":[3,1,2,1]}""",
			"""{"gcc_x":[null,6,7,8,8,null,9,6,null,6],"gcc_c":[3,1,2,1]}""",
			"""{"gcc_x":[null,6,7,6,8,null,9,8,null,6],"gcc_c":[3,1,2,1]}""",
			"""{"gcc_x":[null,6,7,null,8,8,9,6,null,6],"gcc_c":[3,1,2,1]}""",
			"""{"gcc_x":[null,6,7,null,8,6,9,8,null,6],"gcc_c":[3,1,2,1]}""",
			"""{"gcc_x":[null,6,7,8,8,null,9,null,6,6],"gcc_c":[3,1,2,1]}""",
			"""{"gcc_x":[null,6,7,6,8,null,9,null,8,6],"gcc_c":[3,1,2,1]}""",
			"""{"gcc_x":[null,6,7,null,8,8,9,null,6,6],"gcc_c":[3,1,2,1]}""",
			"""{"gcc_x":[null,6,7,null,8,6,9,null,8,6],"gcc_c":[3,1,2,1]}""",
			"""{"gcc_x":[null,6,7,null,8,null,9,8,6,6],"gcc_c":[3,1,2,1]}""",
			"""{"gcc_x":[null,6,7,null,8,null,9,6,8,6],"gcc_c":[3,1,2,1]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/global_cardinality/globals_global_cardinality_set.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_global_cardinality_globals_global_cardinality_set(string solver)
	{
		var path = "unit/globals/global_cardinality/globals_global_cardinality_set.mzn";
		var solutions = new List<string> {
			"""{"x":[{"_set_":"{}"},{"_set_":"{}"}],"counts":[0,0],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1}"}],"counts":[1,0],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{}"}],"counts":[1,0],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1}"}],"counts":[2,0],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{2}"}],"counts":[0,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{2}"},{"_set_":"{}"}],"counts":[0,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,2}"}],"counts":[1,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{2}"},{"_set_":"{1}"}],"counts":[1,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{2}"}],"counts":[1,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1,2}"},{"_set_":"{}"}],"counts":[1,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,2}"}],"counts":[2,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1,2}"},{"_set_":"{1}"}],"counts":[2,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{2}"},{"_set_":"{2}"}],"counts":[0,2],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{2}"},{"_set_":"{1,2}"}],"counts":[1,2],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1,2}"},{"_set_":"{2}"}],"counts":[1,2],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1,2}"},{"_set_":"{1,2}"}],"counts":[2,2],"empty":[],"zero":[0,0,0]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/global_cardinality_closed/globals_global_cardinality_closed_opt.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_global_cardinality_closed_globals_global_cardinality_closed_opt(string solver)
	{
		var path = "unit/globals/global_cardinality_closed/globals_global_cardinality_closed_opt.mzn";
		var solutions = new List<string> {
			"""{"gcc_x":[6,7,6,8,6,9,null,8,6,null],"gcc_c":[4,1,2,1]}""",
			"""{"gcc_x":[6,7,6,8,null,9,6,8,6,null],"gcc_c":[4,1,2,1]}""",
			"""{"gcc_x":[6,7,null,8,6,9,6,8,6,null],"gcc_c":[4,1,2,1]}""",
			"""{"gcc_x":[6,7,9,8,6,9,6,8,6,null],"gcc_c":[4,1,2,2]}""",
			"""{"gcc_x":[6,7,6,8,9,9,6,8,6,null],"gcc_c":[4,1,2,2]}""",
			"""{"gcc_x":[6,7,6,8,6,9,9,8,6,null],"gcc_c":[4,1,2,2]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/global_cardinality_closed/globals_global_cardinality_closed_set.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_global_cardinality_closed_globals_global_cardinality_closed_set(string solver)
	{
		var path = "unit/globals/global_cardinality_closed/globals_global_cardinality_closed_set.mzn";
		var solutions = new List<string> {
			"""{"x":[{"_set_":"{}"},{"_set_":"{}"}],"counts":[0,0],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1}"}],"counts":[1,0],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{}"}],"counts":[1,0],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1}"}],"counts":[2,0],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{2}"}],"counts":[0,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{2}"},{"_set_":"{}"}],"counts":[0,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,2}"}],"counts":[1,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{2}"},{"_set_":"{1}"}],"counts":[1,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{2}"}],"counts":[1,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1,2}"},{"_set_":"{}"}],"counts":[1,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,2}"}],"counts":[2,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1,2}"},{"_set_":"{1}"}],"counts":[2,1],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{2}"},{"_set_":"{2}"}],"counts":[0,2],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{2}"},{"_set_":"{1,2}"}],"counts":[1,2],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1,2}"},{"_set_":"{2}"}],"counts":[1,2],"empty":[],"zero":[0,0,0]}""",
			"""{"x":[{"_set_":"{1,2}"},{"_set_":"{1,2}"}],"counts":[2,2],"empty":[],"zero":[0,0,0]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/global_cardinality_closed/globals_global_cardinality_low_up_closed_opt.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_global_cardinality_closed_globals_global_cardinality_low_up_closed_opt(string solver)
	{
		var path = "unit/globals/global_cardinality_closed/globals_global_cardinality_low_up_closed_opt.mzn";
		var solutions = new List<string> {
			"""{"x":[null,6,5,3,3]}""",
			"""{"x":[null,5,6,3,3]}""",
			"""{"x":[null,6,3,5,3]}""",
			"""{"x":[null,3,6,5,3]}""",
			"""{"x":[null,5,3,6,3]}""",
			"""{"x":[null,3,5,6,3]}""",
			"""{"x":[null,6,3,3,5]}""",
			"""{"x":[null,3,6,3,5]}""",
			"""{"x":[null,3,3,6,5]}""",
			"""{"x":[null,5,3,3,6]}""",
			"""{"x":[null,3,5,3,6]}""",
			"""{"x":[null,3,3,5,6]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/global_cardinality_closed/globals_global_cardinality_low_up_closed_set.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_global_cardinality_closed_globals_global_cardinality_low_up_closed_set(string solver)
	{
		var path = "unit/globals/global_cardinality_closed/globals_global_cardinality_low_up_closed_set.mzn";
		var solutions = new List<string> {
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1,2}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{2}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1,2}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{}"}]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Fact(DisplayName="unit/globals/inverse/inverse_opt.mzn")]
	public async Task test_solve_unit_globals_inverse_inverse_opt()
	{
		var path = "unit/globals/inverse/inverse_opt.mzn";
		var solver = "gecode";
		var solutions = new List<string> {
			"""{"f":[null,null,null],"g":[null,null,null,null]}""",
			"""{"f":[2,null,null],"g":[1,null,null,null]}""",
			"""{"f":[3,null,null],"g":[null,1,null,null]}""",
			"""{"f":[4,null,null],"g":[null,null,1,null]}""",
			"""{"f":[5,null,null],"g":[null,null,null,1]}""",
			"""{"f":[null,2,null],"g":[2,null,null,null]}""",
			"""{"f":[null,3,null],"g":[null,2,null,null]}""",
			"""{"f":[null,4,null],"g":[null,null,2,null]}""",
			"""{"f":[null,5,null],"g":[null,null,null,2]}""",
			"""{"f":[3,2,null],"g":[2,1,null,null]}""",
			"""{"f":[2,3,null],"g":[1,2,null,null]}""",
			"""{"f":[4,2,null],"g":[2,null,1,null]}""",
			"""{"f":[2,4,null],"g":[1,null,2,null]}""",
			"""{"f":[4,3,null],"g":[null,2,1,null]}""",
			"""{"f":[3,4,null],"g":[null,1,2,null]}""",
			"""{"f":[5,2,null],"g":[2,null,null,1]}""",
			"""{"f":[2,5,null],"g":[1,null,null,2]}""",
			"""{"f":[5,3,null],"g":[null,2,null,1]}""",
			"""{"f":[3,5,null],"g":[null,1,null,2]}""",
			"""{"f":[5,4,null],"g":[null,null,2,1]}""",
			"""{"f":[4,5,null],"g":[null,null,1,2]}""",
			"""{"f":[null,null,2],"g":[3,null,null,null]}""",
			"""{"f":[null,null,3],"g":[null,3,null,null]}""",
			"""{"f":[null,null,4],"g":[null,null,3,null]}""",
			"""{"f":[null,null,5],"g":[null,null,null,3]}""",
			"""{"f":[3,null,2],"g":[3,1,null,null]}""",
			"""{"f":[2,null,3],"g":[1,3,null,null]}""",
			"""{"f":[4,null,2],"g":[3,null,1,null]}""",
			"""{"f":[2,null,4],"g":[1,null,3,null]}""",
			"""{"f":[4,null,3],"g":[null,3,1,null]}""",
			"""{"f":[3,null,4],"g":[null,1,3,null]}""",
			"""{"f":[5,null,2],"g":[3,null,null,1]}""",
			"""{"f":[2,null,5],"g":[1,null,null,3]}""",
			"""{"f":[5,null,3],"g":[null,3,null,1]}""",
			"""{"f":[3,null,5],"g":[null,1,null,3]}""",
			"""{"f":[5,null,4],"g":[null,null,3,1]}""",
			"""{"f":[4,null,5],"g":[null,null,1,3]}""",
			"""{"f":[null,3,2],"g":[3,2,null,null]}""",
			"""{"f":[null,2,3],"g":[2,3,null,null]}""",
			"""{"f":[null,4,2],"g":[3,null,2,null]}""",
			"""{"f":[null,2,4],"g":[2,null,3,null]}""",
			"""{"f":[null,4,3],"g":[null,3,2,null]}""",
			"""{"f":[null,3,4],"g":[null,2,3,null]}""",
			"""{"f":[null,5,2],"g":[3,null,null,2]}""",
			"""{"f":[null,2,5],"g":[2,null,null,3]}""",
			"""{"f":[null,5,3],"g":[null,3,null,2]}""",
			"""{"f":[null,3,5],"g":[null,2,null,3]}""",
			"""{"f":[null,5,4],"g":[null,null,3,2]}""",
			"""{"f":[null,4,5],"g":[null,null,2,3]}""",
			"""{"f":[4,3,2],"g":[3,2,1,null]}""",
			"""{"f":[3,4,2],"g":[3,1,2,null]}""",
			"""{"f":[4,2,3],"g":[2,3,1,null]}""",
			"""{"f":[2,4,3],"g":[1,3,2,null]}""",
			"""{"f":[3,2,4],"g":[2,1,3,null]}""",
			"""{"f":[2,3,4],"g":[1,2,3,null]}""",
			"""{"f":[5,3,2],"g":[3,2,null,1]}""",
			"""{"f":[3,5,2],"g":[3,1,null,2]}""",
			"""{"f":[5,2,3],"g":[2,3,null,1]}""",
			"""{"f":[2,5,3],"g":[1,3,null,2]}""",
			"""{"f":[3,2,5],"g":[2,1,null,3]}""",
			"""{"f":[2,3,5],"g":[1,2,null,3]}""",
			"""{"f":[5,4,2],"g":[3,null,2,1]}""",
			"""{"f":[4,5,2],"g":[3,null,1,2]}""",
			"""{"f":[5,2,4],"g":[2,null,3,1]}""",
			"""{"f":[2,5,4],"g":[1,null,3,2]}""",
			"""{"f":[4,2,5],"g":[2,null,1,3]}""",
			"""{"f":[2,4,5],"g":[1,null,2,3]}""",
			"""{"f":[5,4,3],"g":[null,3,2,1]}""",
			"""{"f":[4,5,3],"g":[null,3,1,2]}""",
			"""{"f":[5,3,4],"g":[null,2,3,1]}""",
			"""{"f":[3,5,4],"g":[null,1,3,2]}""",
			"""{"f":[4,3,5],"g":[null,2,1,3]}""",
			"""{"f":[3,4,5],"g":[null,1,2,3]}""",
			};
		var args = new List<string>{
			"-G std",
		};
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/lex2/globals_lex2.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_lex2_globals_lex2(string solver)
	{
		var path = "unit/globals/lex2/globals_lex2.mzn";
		var solutions = new List<string> {
			"""{"y":[[1,1],[1,1]]}""",
			"""{"y":[[1,2],[2,1]]}""",
			"""{"y":[[1,1],[1,2]]}""",
			"""{"y":[[1,2],[1,2]]}""",
			"""{"y":[[1,1],[2,2]]}""",
			"""{"y":[[1,2],[2,2]]}""",
			"""{"y":[[2,2],[2,2]]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/lex_greater/globals_lex_greater.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_lex_greater_globals_lex_greater(string solver)
	{
		var path = "unit/globals/lex_greater/globals_lex_greater.mzn";
		var solutions = new List<string> {
			"""{"lex_avi1":[1,3,5,7,9],"lex_avi2":[1,3,5,1,9]}""",
			"""{"lex_avi1":[1,3,5,7,9],"lex_avi2":[1,3,5,2,9]}""",
			"""{"lex_avi1":[1,3,5,7,9],"lex_avi2":[1,3,5,3,9]}""",
			"""{"lex_avi1":[1,3,5,7,9],"lex_avi2":[1,3,5,4,9]}""",
			"""{"lex_avi1":[1,3,5,7,9],"lex_avi2":[1,3,5,5,9]}""",
			"""{"lex_avi1":[1,3,5,7,9],"lex_avi2":[1,3,5,6,9]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/lex_greatereq/globals_lex_greatereq.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_lex_greatereq_globals_lex_greatereq(string solver)
	{
		var path = "unit/globals/lex_greatereq/globals_lex_greatereq.mzn";
		var solutions = new List<string> {
			"""{"lex_avi1":[1,3,5,7,9],"lex_avi2":[1,3,5,1,9]}""",
			"""{"lex_avi1":[1,3,5,7,9],"lex_avi2":[1,3,5,2,9]}""",
			"""{"lex_avi1":[1,3,5,7,9],"lex_avi2":[1,3,5,3,9]}""",
			"""{"lex_avi1":[1,3,5,7,9],"lex_avi2":[1,3,5,4,9]}""",
			"""{"lex_avi1":[1,3,5,7,9],"lex_avi2":[1,3,5,5,9]}""",
			"""{"lex_avi1":[1,3,5,7,9],"lex_avi2":[1,3,5,6,9]}""",
			"""{"lex_avi1":[1,3,5,7,9],"lex_avi2":[1,3,5,7,9]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/lex_less/test_bool_lex_less.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_lex_less_test_bool_lex_less(string solver)
	{
		var path = "unit/globals/lex_less/test_bool_lex_less.mzn";
		var solutions = new List<string> {
			"""{"x":[false,false],"y":[true,false]}""",
			"""{"x":[false,true],"y":[true,false]}""",
			"""{"x":[false,false],"y":[false,true]}""",
			"""{"x":[false,false],"y":[true,true]}""",
			"""{"x":[true,false],"y":[true,true]}""",
			"""{"x":[false,true],"y":[true,true]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/lex_lesseq/test_bool_lex_lesseq.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_lex_lesseq_test_bool_lex_lesseq(string solver)
	{
		var path = "unit/globals/lex_lesseq/test_bool_lex_lesseq.mzn";
		var solutions = new List<string> {
			"""{"x":[false,false],"y":[false,false]}""",
			"""{"x":[false,false],"y":[true,false]}""",
			"""{"x":[true,false],"y":[true,false]}""",
			"""{"x":[false,true],"y":[true,false]}""",
			"""{"x":[false,false],"y":[false,true]}""",
			"""{"x":[false,true],"y":[false,true]}""",
			"""{"x":[false,false],"y":[true,true]}""",
			"""{"x":[true,false],"y":[true,true]}""",
			"""{"x":[false,true],"y":[true,true]}""",
			"""{"x":[true,true],"y":[true,true]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/nvalue/globals_nvalue.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_nvalue_globals_nvalue(string solver)
	{
		var path = "unit/globals/nvalue/globals_nvalue.mzn";
		var solutions = new List<string> {
			"""{"a":[3,2,1,1],"n":3}""",
			"""{"a":[4,2,1,1],"n":3}""",
			"""{"a":[5,2,1,1],"n":3}""",
			"""{"a":[2,3,1,1],"n":3}""",
			"""{"a":[4,3,1,1],"n":3}""",
			"""{"a":[5,3,1,1],"n":3}""",
			"""{"a":[2,4,1,1],"n":3}""",
			"""{"a":[3,4,1,1],"n":3}""",
			"""{"a":[5,4,1,1],"n":3}""",
			"""{"a":[2,5,1,1],"n":3}""",
			"""{"a":[3,5,1,1],"n":3}""",
			"""{"a":[4,5,1,1],"n":3}""",
			"""{"a":[3,1,2,1],"n":3}""",
			"""{"a":[4,1,2,1],"n":3}""",
			"""{"a":[5,1,2,1],"n":3}""",
			"""{"a":[3,2,2,1],"n":3}""",
			"""{"a":[4,2,2,1],"n":3}""",
			"""{"a":[5,2,2,1],"n":3}""",
			"""{"a":[1,3,2,1],"n":3}""",
			"""{"a":[2,3,2,1],"n":3}""",
			"""{"a":[3,3,2,1],"n":3}""",
			"""{"a":[1,4,2,1],"n":3}""",
			"""{"a":[2,4,2,1],"n":3}""",
			"""{"a":[4,4,2,1],"n":3}""",
			"""{"a":[1,5,2,1],"n":3}""",
			"""{"a":[2,5,2,1],"n":3}""",
			"""{"a":[5,5,2,1],"n":3}""",
			"""{"a":[2,1,3,1],"n":3}""",
			"""{"a":[4,1,3,1],"n":3}""",
			"""{"a":[5,1,3,1],"n":3}""",
			"""{"a":[1,2,3,1],"n":3}""",
			"""{"a":[2,2,3,1],"n":3}""",
			"""{"a":[3,2,3,1],"n":3}""",
			"""{"a":[2,3,3,1],"n":3}""",
			"""{"a":[4,3,3,1],"n":3}""",
			"""{"a":[5,3,3,1],"n":3}""",
			"""{"a":[1,4,3,1],"n":3}""",
			"""{"a":[3,4,3,1],"n":3}""",
			"""{"a":[4,4,3,1],"n":3}""",
			"""{"a":[1,5,3,1],"n":3}""",
			"""{"a":[3,5,3,1],"n":3}""",
			"""{"a":[5,5,3,1],"n":3}""",
			"""{"a":[2,1,4,1],"n":3}""",
			"""{"a":[3,1,4,1],"n":3}""",
			"""{"a":[5,1,4,1],"n":3}""",
			"""{"a":[1,2,4,1],"n":3}""",
			"""{"a":[2,2,4,1],"n":3}""",
			"""{"a":[4,2,4,1],"n":3}""",
			"""{"a":[1,3,4,1],"n":3}""",
			"""{"a":[3,3,4,1],"n":3}""",
			"""{"a":[4,3,4,1],"n":3}""",
			"""{"a":[2,4,4,1],"n":3}""",
			"""{"a":[3,4,4,1],"n":3}""",
			"""{"a":[5,4,4,1],"n":3}""",
			"""{"a":[1,5,4,1],"n":3}""",
			"""{"a":[4,5,4,1],"n":3}""",
			"""{"a":[5,5,4,1],"n":3}""",
			"""{"a":[2,1,5,1],"n":3}""",
			"""{"a":[3,1,5,1],"n":3}""",
			"""{"a":[4,1,5,1],"n":3}""",
			"""{"a":[1,2,5,1],"n":3}""",
			"""{"a":[2,2,5,1],"n":3}""",
			"""{"a":[5,2,5,1],"n":3}""",
			"""{"a":[1,3,5,1],"n":3}""",
			"""{"a":[3,3,5,1],"n":3}""",
			"""{"a":[5,3,5,1],"n":3}""",
			"""{"a":[1,4,5,1],"n":3}""",
			"""{"a":[4,4,5,1],"n":3}""",
			"""{"a":[5,4,5,1],"n":3}""",
			"""{"a":[2,5,5,1],"n":3}""",
			"""{"a":[3,5,5,1],"n":3}""",
			"""{"a":[4,5,5,1],"n":3}""",
			"""{"a":[3,1,1,2],"n":3}""",
			"""{"a":[4,1,1,2],"n":3}""",
			"""{"a":[5,1,1,2],"n":3}""",
			"""{"a":[3,2,1,2],"n":3}""",
			"""{"a":[4,2,1,2],"n":3}""",
			"""{"a":[5,2,1,2],"n":3}""",
			"""{"a":[1,3,1,2],"n":3}""",
			"""{"a":[2,3,1,2],"n":3}""",
			"""{"a":[3,3,1,2],"n":3}""",
			"""{"a":[1,4,1,2],"n":3}""",
			"""{"a":[2,4,1,2],"n":3}""",
			"""{"a":[4,4,1,2],"n":3}""",
			"""{"a":[1,5,1,2],"n":3}""",
			"""{"a":[2,5,1,2],"n":3}""",
			"""{"a":[5,5,1,2],"n":3}""",
			"""{"a":[3,1,2,2],"n":3}""",
			"""{"a":[4,1,2,2],"n":3}""",
			"""{"a":[5,1,2,2],"n":3}""",
			"""{"a":[1,3,2,2],"n":3}""",
			"""{"a":[4,3,2,2],"n":3}""",
			"""{"a":[5,3,2,2],"n":3}""",
			"""{"a":[1,4,2,2],"n":3}""",
			"""{"a":[3,4,2,2],"n":3}""",
			"""{"a":[5,4,2,2],"n":3}""",
			"""{"a":[1,5,2,2],"n":3}""",
			"""{"a":[3,5,2,2],"n":3}""",
			"""{"a":[4,5,2,2],"n":3}""",
			"""{"a":[1,1,3,2],"n":3}""",
			"""{"a":[2,1,3,2],"n":3}""",
			"""{"a":[3,1,3,2],"n":3}""",
			"""{"a":[1,2,3,2],"n":3}""",
			"""{"a":[4,2,3,2],"n":3}""",
			"""{"a":[5,2,3,2],"n":3}""",
			"""{"a":[1,3,3,2],"n":3}""",
			"""{"a":[4,3,3,2],"n":3}""",
			"""{"a":[5,3,3,2],"n":3}""",
			"""{"a":[2,4,3,2],"n":3}""",
			"""{"a":[3,4,3,2],"n":3}""",
			"""{"a":[4,4,3,2],"n":3}""",
			"""{"a":[2,5,3,2],"n":3}""",
			"""{"a":[3,5,3,2],"n":3}""",
			"""{"a":[5,5,3,2],"n":3}""",
			"""{"a":[1,1,4,2],"n":3}""",
			"""{"a":[2,1,4,2],"n":3}""",
			"""{"a":[4,1,4,2],"n":3}""",
			"""{"a":[1,2,4,2],"n":3}""",
			"""{"a":[3,2,4,2],"n":3}""",
			"""{"a":[5,2,4,2],"n":3}""",
			"""{"a":[2,3,4,2],"n":3}""",
			"""{"a":[3,3,4,2],"n":3}""",
			"""{"a":[4,3,4,2],"n":3}""",
			"""{"a":[1,4,4,2],"n":3}""",
			"""{"a":[3,4,4,2],"n":3}""",
			"""{"a":[5,4,4,2],"n":3}""",
			"""{"a":[2,5,4,2],"n":3}""",
			"""{"a":[4,5,4,2],"n":3}""",
			"""{"a":[5,5,4,2],"n":3}""",
			"""{"a":[1,1,5,2],"n":3}""",
			"""{"a":[2,1,5,2],"n":3}""",
			"""{"a":[5,1,5,2],"n":3}""",
			"""{"a":[1,2,5,2],"n":3}""",
			"""{"a":[3,2,5,2],"n":3}""",
			"""{"a":[4,2,5,2],"n":3}""",
			"""{"a":[2,3,5,2],"n":3}""",
			"""{"a":[3,3,5,2],"n":3}""",
			"""{"a":[5,3,5,2],"n":3}""",
			"""{"a":[2,4,5,2],"n":3}""",
			"""{"a":[4,4,5,2],"n":3}""",
			"""{"a":[5,4,5,2],"n":3}""",
			"""{"a":[1,5,5,2],"n":3}""",
			"""{"a":[3,5,5,2],"n":3}""",
			"""{"a":[4,5,5,2],"n":3}""",
			"""{"a":[2,1,1,3],"n":3}""",
			"""{"a":[4,1,1,3],"n":3}""",
			"""{"a":[5,1,1,3],"n":3}""",
			"""{"a":[1,2,1,3],"n":3}""",
			"""{"a":[2,2,1,3],"n":3}""",
			"""{"a":[3,2,1,3],"n":3}""",
			"""{"a":[2,3,1,3],"n":3}""",
			"""{"a":[4,3,1,3],"n":3}""",
			"""{"a":[5,3,1,3],"n":3}""",
			"""{"a":[1,4,1,3],"n":3}""",
			"""{"a":[3,4,1,3],"n":3}""",
			"""{"a":[4,4,1,3],"n":3}""",
			"""{"a":[1,5,1,3],"n":3}""",
			"""{"a":[3,5,1,3],"n":3}""",
			"""{"a":[5,5,1,3],"n":3}""",
			"""{"a":[1,1,2,3],"n":3}""",
			"""{"a":[2,1,2,3],"n":3}""",
			"""{"a":[3,1,2,3],"n":3}""",
			"""{"a":[1,2,2,3],"n":3}""",
			"""{"a":[4,2,2,3],"n":3}""",
			"""{"a":[5,2,2,3],"n":3}""",
			"""{"a":[1,3,2,3],"n":3}""",
			"""{"a":[4,3,2,3],"n":3}""",
			"""{"a":[5,3,2,3],"n":3}""",
			"""{"a":[2,4,2,3],"n":3}""",
			"""{"a":[3,4,2,3],"n":3}""",
			"""{"a":[4,4,2,3],"n":3}""",
			"""{"a":[2,5,2,3],"n":3}""",
			"""{"a":[3,5,2,3],"n":3}""",
			"""{"a":[5,5,2,3],"n":3}""",
			"""{"a":[2,1,3,3],"n":3}""",
			"""{"a":[4,1,3,3],"n":3}""",
			"""{"a":[5,1,3,3],"n":3}""",
			"""{"a":[1,2,3,3],"n":3}""",
			"""{"a":[4,2,3,3],"n":3}""",
			"""{"a":[5,2,3,3],"n":3}""",
			"""{"a":[1,4,3,3],"n":3}""",
			"""{"a":[2,4,3,3],"n":3}""",
			"""{"a":[5,4,3,3],"n":3}""",
			"""{"a":[1,5,3,3],"n":3}""",
			"""{"a":[2,5,3,3],"n":3}""",
			"""{"a":[4,5,3,3],"n":3}""",
			"""{"a":[1,1,4,3],"n":3}""",
			"""{"a":[3,1,4,3],"n":3}""",
			"""{"a":[4,1,4,3],"n":3}""",
			"""{"a":[2,2,4,3],"n":3}""",
			"""{"a":[3,2,4,3],"n":3}""",
			"""{"a":[4,2,4,3],"n":3}""",
			"""{"a":[1,3,4,3],"n":3}""",
			"""{"a":[2,3,4,3],"n":3}""",
			"""{"a":[5,3,4,3],"n":3}""",
			"""{"a":[1,4,4,3],"n":3}""",
			"""{"a":[2,4,4,3],"n":3}""",
			"""{"a":[5,4,4,3],"n":3}""",
			"""{"a":[3,5,4,3],"n":3}""",
			"""{"a":[4,5,4,3],"n":3}""",
			"""{"a":[5,5,4,3],"n":3}""",
			"""{"a":[1,1,5,3],"n":3}""",
			"""{"a":[3,1,5,3],"n":3}""",
			"""{"a":[5,1,5,3],"n":3}""",
			"""{"a":[2,2,5,3],"n":3}""",
			"""{"a":[3,2,5,3],"n":3}""",
			"""{"a":[5,2,5,3],"n":3}""",
			"""{"a":[1,3,5,3],"n":3}""",
			"""{"a":[2,3,5,3],"n":3}""",
			"""{"a":[4,3,5,3],"n":3}""",
			"""{"a":[3,4,5,3],"n":3}""",
			"""{"a":[4,4,5,3],"n":3}""",
			"""{"a":[5,4,5,3],"n":3}""",
			"""{"a":[1,5,5,3],"n":3}""",
			"""{"a":[2,5,5,3],"n":3}""",
			"""{"a":[4,5,5,3],"n":3}""",
			"""{"a":[2,1,1,4],"n":3}""",
			"""{"a":[3,1,1,4],"n":3}""",
			"""{"a":[5,1,1,4],"n":3}""",
			"""{"a":[1,2,1,4],"n":3}""",
			"""{"a":[2,2,1,4],"n":3}""",
			"""{"a":[4,2,1,4],"n":3}""",
			"""{"a":[1,3,1,4],"n":3}""",
			"""{"a":[3,3,1,4],"n":3}""",
			"""{"a":[4,3,1,4],"n":3}""",
			"""{"a":[2,4,1,4],"n":3}""",
			"""{"a":[3,4,1,4],"n":3}""",
			"""{"a":[5,4,1,4],"n":3}""",
			"""{"a":[1,5,1,4],"n":3}""",
			"""{"a":[4,5,1,4],"n":3}""",
			"""{"a":[5,5,1,4],"n":3}""",
			"""{"a":[1,1,2,4],"n":3}""",
			"""{"a":[2,1,2,4],"n":3}""",
			"""{"a":[4,1,2,4],"n":3}""",
			"""{"a":[1,2,2,4],"n":3}""",
			"""{"a":[3,2,2,4],"n":3}""",
			"""{"a":[5,2,2,4],"n":3}""",
			"""{"a":[2,3,2,4],"n":3}""",
			"""{"a":[3,3,2,4],"n":3}""",
			"""{"a":[4,3,2,4],"n":3}""",
			"""{"a":[1,4,2,4],"n":3}""",
			"""{"a":[3,4,2,4],"n":3}""",
			"""{"a":[5,4,2,4],"n":3}""",
			"""{"a":[2,5,2,4],"n":3}""",
			"""{"a":[4,5,2,4],"n":3}""",
			"""{"a":[5,5,2,4],"n":3}""",
			"""{"a":[1,1,3,4],"n":3}""",
			"""{"a":[3,1,3,4],"n":3}""",
			"""{"a":[4,1,3,4],"n":3}""",
			"""{"a":[2,2,3,4],"n":3}""",
			"""{"a":[3,2,3,4],"n":3}""",
			"""{"a":[4,2,3,4],"n":3}""",
			"""{"a":[1,3,3,4],"n":3}""",
			"""{"a":[2,3,3,4],"n":3}""",
			"""{"a":[5,3,3,4],"n":3}""",
			"""{"a":[1,4,3,4],"n":3}""",
			"""{"a":[2,4,3,4],"n":3}""",
			"""{"a":[5,4,3,4],"n":3}""",
			"""{"a":[3,5,3,4],"n":3}""",
			"""{"a":[4,5,3,4],"n":3}""",
			"""{"a":[5,5,3,4],"n":3}""",
			"""{"a":[2,1,4,4],"n":3}""",
			"""{"a":[3,1,4,4],"n":3}""",
			"""{"a":[5,1,4,4],"n":3}""",
			"""{"a":[1,2,4,4],"n":3}""",
			"""{"a":[3,2,4,4],"n":3}""",
			"""{"a":[5,2,4,4],"n":3}""",
			"""{"a":[1,3,4,4],"n":3}""",
			"""{"a":[2,3,4,4],"n":3}""",
			"""{"a":[5,3,4,4],"n":3}""",
			"""{"a":[1,5,4,4],"n":3}""",
			"""{"a":[2,5,4,4],"n":3}""",
			"""{"a":[3,5,4,4],"n":3}""",
			"""{"a":[1,1,5,4],"n":3}""",
			"""{"a":[4,1,5,4],"n":3}""",
			"""{"a":[5,1,5,4],"n":3}""",
			"""{"a":[2,2,5,4],"n":3}""",
			"""{"a":[4,2,5,4],"n":3}""",
			"""{"a":[5,2,5,4],"n":3}""",
			"""{"a":[3,3,5,4],"n":3}""",
			"""{"a":[4,3,5,4],"n":3}""",
			"""{"a":[5,3,5,4],"n":3}""",
			"""{"a":[1,4,5,4],"n":3}""",
			"""{"a":[2,4,5,4],"n":3}""",
			"""{"a":[3,4,5,4],"n":3}""",
			"""{"a":[1,5,5,4],"n":3}""",
			"""{"a":[2,5,5,4],"n":3}""",
			"""{"a":[3,5,5,4],"n":3}""",
			"""{"a":[2,1,1,5],"n":3}""",
			"""{"a":[3,1,1,5],"n":3}""",
			"""{"a":[4,1,1,5],"n":3}""",
			"""{"a":[1,2,1,5],"n":3}""",
			"""{"a":[2,2,1,5],"n":3}""",
			"""{"a":[5,2,1,5],"n":3}""",
			"""{"a":[1,3,1,5],"n":3}""",
			"""{"a":[3,3,1,5],"n":3}""",
			"""{"a":[5,3,1,5],"n":3}""",
			"""{"a":[1,4,1,5],"n":3}""",
			"""{"a":[4,4,1,5],"n":3}""",
			"""{"a":[5,4,1,5],"n":3}""",
			"""{"a":[2,5,1,5],"n":3}""",
			"""{"a":[3,5,1,5],"n":3}""",
			"""{"a":[4,5,1,5],"n":3}""",
			"""{"a":[1,1,2,5],"n":3}""",
			"""{"a":[2,1,2,5],"n":3}""",
			"""{"a":[5,1,2,5],"n":3}""",
			"""{"a":[1,2,2,5],"n":3}""",
			"""{"a":[3,2,2,5],"n":3}""",
			"""{"a":[4,2,2,5],"n":3}""",
			"""{"a":[2,3,2,5],"n":3}""",
			"""{"a":[3,3,2,5],"n":3}""",
			"""{"a":[5,3,2,5],"n":3}""",
			"""{"a":[2,4,2,5],"n":3}""",
			"""{"a":[4,4,2,5],"n":3}""",
			"""{"a":[5,4,2,5],"n":3}""",
			"""{"a":[1,5,2,5],"n":3}""",
			"""{"a":[3,5,2,5],"n":3}""",
			"""{"a":[4,5,2,5],"n":3}""",
			"""{"a":[1,1,3,5],"n":3}""",
			"""{"a":[3,1,3,5],"n":3}""",
			"""{"a":[5,1,3,5],"n":3}""",
			"""{"a":[2,2,3,5],"n":3}""",
			"""{"a":[3,2,3,5],"n":3}""",
			"""{"a":[5,2,3,5],"n":3}""",
			"""{"a":[1,3,3,5],"n":3}""",
			"""{"a":[2,3,3,5],"n":3}""",
			"""{"a":[4,3,3,5],"n":3}""",
			"""{"a":[3,4,3,5],"n":3}""",
			"""{"a":[4,4,3,5],"n":3}""",
			"""{"a":[5,4,3,5],"n":3}""",
			"""{"a":[1,5,3,5],"n":3}""",
			"""{"a":[2,5,3,5],"n":3}""",
			"""{"a":[4,5,3,5],"n":3}""",
			"""{"a":[1,1,4,5],"n":3}""",
			"""{"a":[4,1,4,5],"n":3}""",
			"""{"a":[5,1,4,5],"n":3}""",
			"""{"a":[2,2,4,5],"n":3}""",
			"""{"a":[4,2,4,5],"n":3}""",
			"""{"a":[5,2,4,5],"n":3}""",
			"""{"a":[3,3,4,5],"n":3}""",
			"""{"a":[4,3,4,5],"n":3}""",
			"""{"a":[5,3,4,5],"n":3}""",
			"""{"a":[1,4,4,5],"n":3}""",
			"""{"a":[2,4,4,5],"n":3}""",
			"""{"a":[3,4,4,5],"n":3}""",
			"""{"a":[1,5,4,5],"n":3}""",
			"""{"a":[2,5,4,5],"n":3}""",
			"""{"a":[3,5,4,5],"n":3}""",
			"""{"a":[2,1,5,5],"n":3}""",
			"""{"a":[3,1,5,5],"n":3}""",
			"""{"a":[4,1,5,5],"n":3}""",
			"""{"a":[1,2,5,5],"n":3}""",
			"""{"a":[3,2,5,5],"n":3}""",
			"""{"a":[4,2,5,5],"n":3}""",
			"""{"a":[1,3,5,5],"n":3}""",
			"""{"a":[2,3,5,5],"n":3}""",
			"""{"a":[4,3,5,5],"n":3}""",
			"""{"a":[1,4,5,5],"n":3}""",
			"""{"a":[2,4,5,5],"n":3}""",
			"""{"a":[3,4,5,5],"n":3}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/range/globals_range.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_range_globals_range(string solver)
	{
		var path = "unit/globals/range/globals_range.mzn";
		var solutions = new List<string> {
			"""{"range_avi1":[9,8,7]}""",
			"""{"range_avi1":[8,9,7]}""",
			"""{"range_avi1":[9,7,8]}""",
			"""{"range_avi1":[7,9,8]}""",
			"""{"range_avi1":[8,7,9]}""",
			"""{"range_avi1":[7,8,9]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/regular/globals_regular_regex_3.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_regular_globals_regular_regex_3(string solver)
	{
		var path = "unit/globals/regular/globals_regular_regex_3.mzn";
		var solutions = new List<string> {
			"""{"x":[1,4,1,4]}""",
			"""{"x":[1,4,2,4]}""",
			"""{"x":[1,4,3,4]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/regular/globals_regular_regex_5.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_regular_globals_regular_regex_5(string solver)
	{
		var path = "unit/globals/regular/globals_regular_regex_5.mzn";
		var solutions = new List<string> {
			"""{"x":[1,2]}""",
			"""{"x":[2,2]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/roots/test_roots2.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_roots_test_roots2(string solver)
	{
		var path = "unit/globals/roots/test_roots2.mzn";
		var solutions = new List<string> {
			"""{"s":{"_set_":"{1,2,3,4,5}"},"t":{"_set_":"{1,2,3,4,5}"}}""",
			"""{"s":{"_set_":"{1,2,3,4,5}"},"t":{"_set_":"{1,2,3,4}"}}""",
			"""{"s":{"_set_":"{1,2,3,4,5}"},"t":{"_set_":"{1,2,3,5}"}}""",
			"""{"s":{"_set_":"{1,2,3,4,5}"},"t":{"_set_":"{1,2,3}"}}""",
			"""{"s":{"_set_":"{1,2,3,5}"},"t":{"_set_":"{1,3,4,5}"}}""",
			"""{"s":{"_set_":"{1,2,3,5}"},"t":{"_set_":"{1,3,4}"}}""",
			"""{"s":{"_set_":"{1,2,3,5}"},"t":{"_set_":"{1,3,5}"}}""",
			"""{"s":{"_set_":"{1,2,3,5}"},"t":{"_set_":"{1,3}"}}""",
			"""{"s":{"_set_":"{1,3,4}"},"t":{"_set_":"{1,2,4,5}"}}""",
			"""{"s":{"_set_":"{1,3,4}"},"t":{"_set_":"{1,2,4}"}}""",
			"""{"s":{"_set_":"{1,3,4}"},"t":{"_set_":"{1,2,5}"}}""",
			"""{"s":{"_set_":"{1,3,4}"},"t":{"_set_":"{1,2}"}}""",
			"""{"s":{"_set_":"{1,3}"},"t":{"_set_":"{1,4,5}"}}""",
			"""{"s":{"_set_":"{1,3}"},"t":{"_set_":"{1,4}"}}""",
			"""{"s":{"_set_":"{1,3}"},"t":{"_set_":"{1,5}"}}""",
			"""{"s":{"_set_":"{1,3}"},"t":{"_set_":"{1}"}}""",
			"""{"s":{"_set_":"{2,4,5}"},"t":{"_set_":"{2,3,4,5}"}}""",
			"""{"s":{"_set_":"{2,4,5}"},"t":{"_set_":"{2,3,4}"}}""",
			"""{"s":{"_set_":"{2,4,5}"},"t":{"_set_":"{2,3,5}"}}""",
			"""{"s":{"_set_":"{2,4,5}"},"t":{"_set_":"{2,3}"}}""",
			"""{"s":{"_set_":"{2,5}"},"t":{"_set_":"{3,4,5}"}}""",
			"""{"s":{"_set_":"{2,5}"},"t":{"_set_":"{3,4}"}}""",
			"""{"s":{"_set_":"{2,5}"},"t":{"_set_":"{3,5}"}}""",
			"""{"s":{"_set_":"{2,5}"},"t":{"_set_":"{3}"}}""",
			"""{"s":{"_set_":"{4}"},"t":{"_set_":"{2,4,5}"}}""",
			"""{"s":{"_set_":"{4}"},"t":{"_set_":"{2,4}"}}""",
			"""{"s":{"_set_":"{4}"},"t":{"_set_":"{2,5}"}}""",
			"""{"s":{"_set_":"{4}"},"t":{"_set_":"{2}"}}""",
			"""{"s":{"_set_":"{}"},"t":{"_set_":"{4,5}"}}""",
			"""{"s":{"_set_":"{}"},"t":{"_set_":"{4}"}}""",
			"""{"s":{"_set_":"{}"},"t":{"_set_":"{5}"}}""",
			"""{"s":{"_set_":"{}"},"t":{"_set_":"{}"}}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/strict_lex2/globals_strict_lex2.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_strict_lex2_globals_strict_lex2(string solver)
	{
		var path = "unit/globals/strict_lex2/globals_strict_lex2.mzn";
		var solutions = new List<string> {
			"""{"y":[[1,2],[2,1]]}""",
			"""{"y":[[1,1],[1,2]]}""",
			"""{"y":[[1,2],[2,2]]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/subcircuit/test_subcircuit.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_subcircuit_test_subcircuit(string solver)
	{
		var path = "unit/globals/subcircuit/test_subcircuit.mzn";
		var solutions = new List<string> {
			"""{"x":[1,2,3,4]}""",
			"""{"x":[2,1,3,4]}""",
			"""{"x":[1,4,3,2]}""",
			"""{"x":[4,2,3,1]}""",
			"""{"x":[2,4,3,1]}""",
			"""{"x":[4,1,3,2]}""",
			"""{"x":[1,2,4,3]}""",
			"""{"x":[1,3,2,4]}""",
			"""{"x":[1,3,4,2]}""",
			"""{"x":[1,4,2,3]}""",
			"""{"x":[3,2,1,4]}""",
			"""{"x":[4,2,1,3]}""",
			"""{"x":[3,2,4,1]}""",
			"""{"x":[2,3,1,4]}""",
			"""{"x":[3,1,2,4]}""",
			"""{"x":[4,3,1,2]}""",
			"""{"x":[2,3,4,1]}""",
			"""{"x":[3,4,2,1]}""",
			"""{"x":[4,1,2,3]}""",
			"""{"x":[2,4,1,3]}""",
			"""{"x":[3,1,4,2]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/table/globals_table_opt.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_table_globals_table_opt(string solver)
	{
		var path = "unit/globals/table/globals_table_opt.mzn";
		var solutions = new List<string> {
			"""{"xs":[3,5]}""",
			"""{"xs":[4,5]}""",
			"""{"xs":[5,5]}""",
			"""{"xs":[3,null]}""",
			"""{"xs":[4,null]}""",
			"""{"xs":[5,null]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/value_precede/globals_value_precede_int.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_value_precede_globals_value_precede_int(string solver)
	{
		var path = "unit/globals/value_precede/globals_value_precede_int.mzn";
		var solutions = new List<string> {
			"""{"x":[1,1,3]}""",
			"""{"x":[1,3,3]}""",
			"""{"x":[1,4,3]}""",
			"""{"x":[3,1,3]}""",
			"""{"x":[3,3,3]}""",
			"""{"x":[3,4,3]}""",
			"""{"x":[4,1,3]}""",
			"""{"x":[4,2,3]}""",
			"""{"x":[4,3,3]}""",
			"""{"x":[4,4,3]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/value_precede/globals_value_precede_int_opt.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_value_precede_globals_value_precede_int_opt(string solver)
	{
		var path = "unit/globals/value_precede/globals_value_precede_int_opt.mzn";
		var solutions = new List<string> {
			"""{"x":[null,null,null]}""",
			"""{"x":[1,null,null]}""",
			"""{"x":[3,null,null]}""",
			"""{"x":[null,1,null]}""",
			"""{"x":[null,3,null]}""",
			"""{"x":[1,1,null]}""",
			"""{"x":[1,2,null]}""",
			"""{"x":[1,3,null]}""",
			"""{"x":[3,1,null]}""",
			"""{"x":[3,3,null]}""",
			"""{"x":[null,null,1]}""",
			"""{"x":[null,null,3]}""",
			"""{"x":[1,null,1]}""",
			"""{"x":[1,null,2]}""",
			"""{"x":[1,null,3]}""",
			"""{"x":[3,null,1]}""",
			"""{"x":[3,null,3]}""",
			"""{"x":[null,1,1]}""",
			"""{"x":[null,1,2]}""",
			"""{"x":[null,1,3]}""",
			"""{"x":[null,3,1]}""",
			"""{"x":[null,3,3]}""",
			"""{"x":[1,1,1]}""",
			"""{"x":[1,2,1]}""",
			"""{"x":[1,3,1]}""",
			"""{"x":[1,1,2]}""",
			"""{"x":[1,2,2]}""",
			"""{"x":[1,3,2]}""",
			"""{"x":[1,1,3]}""",
			"""{"x":[1,2,3]}""",
			"""{"x":[1,3,3]}""",
			"""{"x":[3,1,1]}""",
			"""{"x":[3,1,2]}""",
			"""{"x":[3,1,3]}""",
			"""{"x":[3,3,1]}""",
			"""{"x":[3,3,3]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/value_precede/globals_value_precede_set.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_value_precede_globals_value_precede_set(string solver)
	{
		var path = "unit/globals/value_precede/globals_value_precede_set.mzn";
		var solutions = new List<string> {
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,2,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,2,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1,2,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,2,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{2,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{2,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{2,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{2,3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{3}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2,3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2,3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1,3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2,3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2,3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{3}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,2,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,2,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1,2,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,2,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{2,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{2,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{2,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{2,3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{3}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,2,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,2,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1,2,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,2,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{2,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{2,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{2,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{2,3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{3}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,2,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,2,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1,2,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,2,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{2,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{2,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{2,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{2,3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{3}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2,3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2,3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1,3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2,3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2,3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{3}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,2,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,2,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1,2,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,2,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{2,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{2,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{2,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{2,3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{3}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,2,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,2,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1,2,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,2,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,2}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,2}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{1}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{1}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{1}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{1}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{2,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{2,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{2,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{2,3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{2}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{2}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{3}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,2,3}"},{"_set_":"{}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,3}"},{"_set_":"{}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{2,3}"},{"_set_":"{}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{3}"},{"_set_":"{}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{}"},{"_set_":"{}"}]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/value_precede_chain/globals_value_precede_chain_int.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_value_precede_chain_globals_value_precede_chain_int(string solver)
	{
		var path = "unit/globals/value_precede_chain/globals_value_precede_chain_int.mzn";
		var solutions = new List<string> {
			"""{"x":[1,1,1]}""",
			"""{"x":[4,1,1]}""",
			"""{"x":[4,1,3]}""",
			"""{"x":[1,1,4]}""",
			"""{"x":[4,1,4]}""",
			"""{"x":[4,3,1]}""",
			"""{"x":[4,3,2]}""",
			"""{"x":[4,3,3]}""",
			"""{"x":[4,3,4]}""",
			"""{"x":[1,4,1]}""",
			"""{"x":[4,4,1]}""",
			"""{"x":[1,4,3]}""",
			"""{"x":[4,4,3]}""",
			"""{"x":[1,4,4]}""",
			"""{"x":[4,4,4]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/value_precede_chain/globals_value_precede_chain_int_opt.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_value_precede_chain_globals_value_precede_chain_int_opt(string solver)
	{
		var path = "unit/globals/value_precede_chain/globals_value_precede_chain_int_opt.mzn";
		var solutions = new List<string> {
			"""{"x":[null,null,null]}""",
			"""{"x":[null,null,1]}""",
			"""{"x":[null,null,4]}""",
			"""{"x":[1,null,null]}""",
			"""{"x":[4,null,null]}""",
			"""{"x":[1,null,1]}""",
			"""{"x":[1,null,4]}""",
			"""{"x":[4,null,1]}""",
			"""{"x":[4,null,3]}""",
			"""{"x":[4,null,4]}""",
			"""{"x":[null,1,null]}""",
			"""{"x":[null,4,null]}""",
			"""{"x":[1,1,null]}""",
			"""{"x":[1,4,null]}""",
			"""{"x":[4,1,null]}""",
			"""{"x":[4,3,null]}""",
			"""{"x":[4,4,null]}""",
			"""{"x":[null,1,1]}""",
			"""{"x":[null,1,4]}""",
			"""{"x":[null,4,1]}""",
			"""{"x":[null,4,3]}""",
			"""{"x":[null,4,4]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/value_precede_chain/globals_value_precede_chain_set.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_value_precede_chain_globals_value_precede_chain_set(string solver)
	{
		var path = "unit/globals/value_precede_chain/globals_value_precede_chain_set.mzn";
		var solutions = new List<string> {
			"""{"x":[{"_set_":"{1,2,3,4}"},{"_set_":"{1,2,3,4}"}]}""",
			"""{"x":[{"_set_":"{1,3,4}"},{"_set_":"{1,2,3,4}"}]}""",
			"""{"x":[{"_set_":"{1,4}"},{"_set_":"{1,2,3,4}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,2,3,4}"}]}""",
			"""{"x":[{"_set_":"{2,3,4}"},{"_set_":"{1,2,3,4}"}]}""",
			"""{"x":[{"_set_":"{3,4}"},{"_set_":"{1,2,3,4}"}]}""",
			"""{"x":[{"_set_":"{4}"},{"_set_":"{1,2,3,4}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,2,3,4}"}]}""",
			"""{"x":[{"_set_":"{1,4}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{4}"},{"_set_":"{1,2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3,4}"},{"_set_":"{1,2,4}"}]}""",
			"""{"x":[{"_set_":"{3,4}"},{"_set_":"{1,2,4}"}]}""",
			"""{"x":[{"_set_":"{1,3,4}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{3,4}"},{"_set_":"{1,2}"}]}""",
			"""{"x":[{"_set_":"{1,2,3,4}"},{"_set_":"{1,3,4}"}]}""",
			"""{"x":[{"_set_":"{1,3,4}"},{"_set_":"{1,3,4}"}]}""",
			"""{"x":[{"_set_":"{1,4}"},{"_set_":"{1,3,4}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,3,4}"}]}""",
			"""{"x":[{"_set_":"{2,3,4}"},{"_set_":"{1,3,4}"}]}""",
			"""{"x":[{"_set_":"{3,4}"},{"_set_":"{1,3,4}"}]}""",
			"""{"x":[{"_set_":"{4}"},{"_set_":"{1,3,4}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,3,4}"}]}""",
			"""{"x":[{"_set_":"{1,4}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{4}"},{"_set_":"{1,3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3,4}"},{"_set_":"{1,4}"}]}""",
			"""{"x":[{"_set_":"{1,3,4}"},{"_set_":"{1,4}"}]}""",
			"""{"x":[{"_set_":"{1,4}"},{"_set_":"{1,4}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1,4}"}]}""",
			"""{"x":[{"_set_":"{2,3,4}"},{"_set_":"{1,4}"}]}""",
			"""{"x":[{"_set_":"{3,4}"},{"_set_":"{1,4}"}]}""",
			"""{"x":[{"_set_":"{4}"},{"_set_":"{1,4}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1,4}"}]}""",
			"""{"x":[{"_set_":"{1,2,3,4}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,3,4}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,4}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{2,3,4}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{3,4}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{4}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{1}"}]}""",
			"""{"x":[{"_set_":"{1,2,3,4}"},{"_set_":"{2,3,4}"}]}""",
			"""{"x":[{"_set_":"{1,3,4}"},{"_set_":"{2,3,4}"}]}""",
			"""{"x":[{"_set_":"{1,4}"},{"_set_":"{2,3,4}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{2,3,4}"}]}""",
			"""{"x":[{"_set_":"{2,3,4}"},{"_set_":"{2,3,4}"}]}""",
			"""{"x":[{"_set_":"{3,4}"},{"_set_":"{2,3,4}"}]}""",
			"""{"x":[{"_set_":"{4}"},{"_set_":"{2,3,4}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{2,3,4}"}]}""",
			"""{"x":[{"_set_":"{1,4}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{4}"},{"_set_":"{2,3}"}]}""",
			"""{"x":[{"_set_":"{1,3,4}"},{"_set_":"{2,4}"}]}""",
			"""{"x":[{"_set_":"{3,4}"},{"_set_":"{2,4}"}]}""",
			"""{"x":[{"_set_":"{1,3,4}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{3,4}"},{"_set_":"{2}"}]}""",
			"""{"x":[{"_set_":"{1,2,3,4}"},{"_set_":"{3,4}"}]}""",
			"""{"x":[{"_set_":"{1,3,4}"},{"_set_":"{3,4}"}]}""",
			"""{"x":[{"_set_":"{1,4}"},{"_set_":"{3,4}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{3,4}"}]}""",
			"""{"x":[{"_set_":"{2,3,4}"},{"_set_":"{3,4}"}]}""",
			"""{"x":[{"_set_":"{3,4}"},{"_set_":"{3,4}"}]}""",
			"""{"x":[{"_set_":"{4}"},{"_set_":"{3,4}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{3,4}"}]}""",
			"""{"x":[{"_set_":"{1,4}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{4}"},{"_set_":"{3}"}]}""",
			"""{"x":[{"_set_":"{1,2,3,4}"},{"_set_":"{4}"}]}""",
			"""{"x":[{"_set_":"{1,3,4}"},{"_set_":"{4}"}]}""",
			"""{"x":[{"_set_":"{1,4}"},{"_set_":"{4}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{4}"}]}""",
			"""{"x":[{"_set_":"{2,3,4}"},{"_set_":"{4}"}]}""",
			"""{"x":[{"_set_":"{3,4}"},{"_set_":"{4}"}]}""",
			"""{"x":[{"_set_":"{4}"},{"_set_":"{4}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{4}"}]}""",
			"""{"x":[{"_set_":"{1,2,3,4}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,3,4}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1,4}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{1}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{2,3,4}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{3,4}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{4}"},{"_set_":"{}"}]}""",
			"""{"x":[{"_set_":"{}"},{"_set_":"{}"}]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

	[Theory(DisplayName="unit/globals/var_sqr_sym/globals_var_sqr_sym.mzn")]
	[InlineData("gecode")]
	[InlineData("chuffed")]
	public async Task test_solve_unit_globals_var_sqr_sym_globals_var_sqr_sym(string solver)
	{
		var path = "unit/globals/var_sqr_sym/globals_var_sqr_sym.mzn";
		var solutions = new List<string> {
			"""{"x":[[1,3],[4,2]]}""",
			"""{"x":[[1,2],[4,3]]}""",
			"""{"x":[[1,2],[3,4]]}""",
			};
		var args = new List<string>();
		string? error = null;
		var allSolutions = true;
		var statuses = new List<SolveStatus>{
			SolveStatus.Satisfied,SolveStatus.Optimal
		};
		await Test(path, solver, solutions, args, error, allSolutions, statuses);
	}

}

