predicate fzn_count_eq(array [int] of var int: x,var int: y,var int: c);
array [1..2] of int: X_INTRODUCED_4_ = [-1,1];
var 1..10: X_INTRODUCED_0_;
var 1..10: X_INTRODUCED_1_;
var 1..10: X_INTRODUCED_2_;
var 1..10: y:: output_var;
var 1..3: c:: output_var;
var 0..3: X_INTRODUCED_3_ ::var_is_introduced :: is_defined_var;
array [1..3] of var int: x:: output_array([1..3]) = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_];
constraint fzn_count_eq(x,y,X_INTRODUCED_3_):: defines_var(X_INTRODUCED_3_);
constraint int_lin_le(X_INTRODUCED_4_,[X_INTRODUCED_3_,c],0);
solve  satisfy;
