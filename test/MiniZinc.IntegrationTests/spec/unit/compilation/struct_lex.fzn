predicate array_int_lt(array [int] of var int: x,array [int] of var int: y);
predicate array_int_lq(array [int] of var int: x,array [int] of var int: y);
var 1..2: X_INTRODUCED_16_:: output_var;
var 1..3: X_INTRODUCED_17_:: output_var;
var bool: X_INTRODUCED_19_:: output_var;
var 1..2: X_INTRODUCED_20_:: output_var;
var 1..2: X_INTRODUCED_21_:: output_var;
var 1..3: X_INTRODUCED_22_:: output_var;
var bool: X_INTRODUCED_24_:: output_var;
var 1..2: X_INTRODUCED_25_:: output_var;
var 0..1: X_INTRODUCED_26_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_27_ ::var_is_introduced :: is_defined_var;
array [1..4] of var int: X_INTRODUCED_28_ ::var_is_introduced :: promise_ctx_antitone = [X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_27_,X_INTRODUCED_20_];
array [1..4] of var int: X_INTRODUCED_29_ ::var_is_introduced :: promise_ctx_monotone = [X_INTRODUCED_21_,X_INTRODUCED_22_,X_INTRODUCED_26_,X_INTRODUCED_25_];
constraint array_int_lt(X_INTRODUCED_28_,X_INTRODUCED_29_);
constraint array_int_lq(X_INTRODUCED_28_,X_INTRODUCED_29_);
constraint bool2int(X_INTRODUCED_24_,X_INTRODUCED_26_):: defines_var(X_INTRODUCED_26_);
constraint bool2int(X_INTRODUCED_19_,X_INTRODUCED_27_):: defines_var(X_INTRODUCED_27_);
solve  satisfy;
