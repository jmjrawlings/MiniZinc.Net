/***
!Test
solvers: [gecode]
expected: !Result
  solution: !Solution
    a: [1, 2, 3]
    b: [[1, 2], [3, 4], [5, 6]]
    c: [[[1, 2], [3, 4]], [[5, 6], [7, 8]], [[9, 10], [11, 12]]]
    d: [[[[1, 2]], [[3, 4]]], [[[5, 6]], [[7, 8]]], [[[9, 10]], [[11, 12]]]]
    e: [[[[[1], [2]]], [[[3], [4]]]], [[[[5], [6]]], [[[7], [8]]]], [[[[9], [10]]], [[[11], [12]]]]]
    f: [[[[[[1], [2]]], [[[3], [4]]]]], [[[[[5], [6]]], [[[7], [8]]]]], [[[[[9], [10]]], [[[11], [12]]]]]]
    x: [[1, 2, 3]]
    y: [[4, 5, 6], [7, 8, 9]]
    z: [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
***/


include "globals.mzn";

any: a :: output = [1] ++ [2, 3];
any: b :: output = [|1, 2|] ++ [|3, 4 | 5, 6|];
any: c :: output = array3d(1..1, 1..2, 1..2, [1, 2, 3, 4]) ++ array3d(1..2, 1..2, 1..2, [5, 6, 7, 8, 9, 10, 11, 12]);
any: d :: output = array4d(1..1, 1..2, 1..1, 1..2, [1, 2, 3, 4]) ++ array4d(1..2, 1..2, 1..1, 1..2, [5, 6, 7, 8, 9, 10, 11, 12]);
any: e :: output = array5d(1..1, 1..2, 1..1, 1..2, 1..1, [1, 2, 3, 4]) ++ array5d(1..2, 1..2, 1..1, 1..2, 1..1, [5, 6, 7, 8, 9, 10, 11, 12]);
any: f :: output = array6d(1..1, 1..1, 1..2, 1..1, 1..2, 1..1, [1, 2, 3, 4]) ++ array6d(1..2, 1..1, 1..2, 1..1, 1..2, 1..1, [5, 6, 7, 8, 9, 10, 11, 12]);

array [1..1, 1..3] of var 1..9: x;
array [1..2, 1..3] of var 1..9: y;
any: z :: output = x ++ y;
constraint strictly_increasing(z);
